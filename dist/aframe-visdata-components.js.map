{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/querier_github.js","webpack:///./src/querier_json.js","webpack:///./src/vismapper.js","webpack:///./src/visdata.js","webpack:///./src/interaction-mapper.js","webpack:///./src/debug_data.js","webpack:///./node_modules/aframe-layout-component/index.js","webpack:///./node_modules/aframe-super-keyboard/index.js","webpack:///./node_modules/aframe-super-keyboard/keyboards.js","webpack:///./node_modules/aframe-text-geometry-component/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AFRAME","Error","registerComponent","schema","user","type","token","repos","multiple","init","data","this","el","length","requestAllReposFromUser","requestReposFromList","update","oldData","remove","pause","play","dataOfRepos","forEach","e","request","XMLHttpRequest","url","Date","getTime","open","onload","status","console","log","id","rawData","JSON","parse","response","reject","statusText","xhr","onerror","send","dataRetrieved","setAttribute","stringify","dataEventLoaded","CustomEvent","detail","dispatchEvent","allReposParse","dataParsed","embedded","requestJSONDataFromURL","parseEmbeddedJSONData","String","width","depth","height","dataToShow","components","geometry","primitive","dependencies","from","index","querierElement","document","getElementById","getAttribute","dataFromQuerier","isNaN","parseInt","saveEntityData","keys","addEventListener","vismapper","removeEventListener","dataToSave","input","output","mapEvents","emit","inputEvent","listenEvent","showDebugPlane","querySelector","debugPanel","entity","createElement","parentPos","parentWidth","parentHeight","x","WIDTH_PLANE_DEBUG","y","HEIGHT_PLANE_DEBUG","z","textEntity","appendChild","generateDebugPanel","positions","positionHelper","THREE","Vector3","getBoxPositions","numChildren","marginDefined","column","marginColumn","marginRow","offsetColumn","offsetRow","row","rows","Math","ceil","columns","margin","getOffsetItemIndex","align","set","plane","indexOf","pushPositionVec3","getCirclePositions","rad","angle","PI","radius","cos","sin","getLinePositions","getCubePositions","pushPositions","scalePositions","getDodecahedronPositions","PHI","sqrt","B","C","NB","NC","getPyramidPositions","SQRT_3","NEG_SQRT_1_3","numItems","scale","setPositions","els","orderAttribute","orderIndex","object3D","position","arguments","push","vec3","default","min","max","if","reverse","oneOf","fill","self","children","getChildEntities","initialPositions","childEl","hasLoaded","_getPositions","handleChildAttached","handleChildDetached","definedData","positionFn","getDOMAttribute","evt","parentNode","splice","KEYBOARDS","FontFactors","roboto","aileronsemibold","dejavu","exo2bold","exo2semibold","kelsonsans","monoid","mozillavr","sourcecodepro","findFontChar","chars","code","blinkingSpeed","filters","font","hand","imagePath","injectToRaycasterObjects","inputColor","interval","keyBgColor","keyColor","keyHoverColor","keyPressColor","label","labelColor","maxLength","model","show","click","changeEventDetail","textInputObject","focused","keyHover","prevCheckTime","shift","rawValue","defaultValue","userFilterFunc","intervalId","kbImg","classList","add","hover","blur","baseline","lineHeight","color","wrapCount","textInput","cursor","shader","cursorUpdated","Color","ev","ss","floor","random","handListenersSet","raycaster","kbdata","w","h","undefined","updateTextInput","filter","src","img","transparent","initKeyColorPlane","inputx","inputOffsetX","layout","kdata","inputRect","inputOffsetY","updateCursorPosition","setupHand","close","error","tick","time","intersection","getIntersection","uv","k","updateKeyColorPlane","startBlinking","stopBlinking","keyColorPlane","visible","getObject3D","material","blending","AdditiveBlending","w2","h2","keyw","keyh","copy","ownRaycaster","removeAttribute","join","params","objs","objects","split","replace","showLine","enabled","str","toUpperCase","toLowerCase","map","substr","trim","accept","newValue","dismiss","setTimeout","window","setInterval","blink","clearInterval","setCustomFilter","f","addCustomModel","text","currentFont","posy","ratio","pos","fontFactor","char","charCodeAt","xadvance","basic","numpad","debug","utils","fontLoader","FontLoader","bevelEnabled","bevelSize","bevelThickness","curveSegments","size","style","weight","mesh","getOrCreateObject3D","Mesh","constructor","load","textData","clone","TextGeometry"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCClFAnC,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,kCCPA,GAAsB,oBAAXoC,OACP,MAAM,IAAIC,MAAM,gEAMpBD,OAAOE,kBAAkB,iBAAkB,CACvCC,OAAQ,CACJC,KAAM,CAAEC,KAAM,UACdC,MAAO,CAAED,KAAM,UACfE,MAAO,CAAEF,KAAM,UAMnBG,UAAU,EAKVC,KAAM,WACF,IAAIC,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAEVF,EAAKN,MAA+B,IAAtBM,EAAKH,MAAMM,OACzBC,EAAwBJ,EAAME,GACvBF,EAAKH,MAAMM,OAAS,GAC3BE,EAAqBL,EAAME,IAUnCI,OAAQ,SAAUC,GACHN,KAAKD,KACPC,KAAKC,IAOlBM,OAAQ,aAWRC,MAAO,aAMPC,KAAM,eAIV,IAAIL,EAAuB,SAACL,EAAME,GAC9B,IAAIS,EAAc,GAElBX,EAAKH,MAAMe,QAAQ,SAACC,EAAGvD,GAEnB,IAAIwD,EAAU,IAAIC,eAGdC,EAAM,gCAAkChB,EAAKN,KAAO,IAAMmB,EAAI,OAAQ,IAAII,MAAOC,UAGrFJ,EAAQK,KAAK,MAAOH,GAAK,GAEzBF,EAAQM,OAAS,WACb,GAAInB,KAAKoB,QAAU,KAAOpB,KAAKoB,OAAS,IAAK,CACzCC,QAAQC,IAAI,8BAA+BrB,EAAGsB,IAG9C,IAAIC,EAAUC,KAAKC,MAAMb,EAAQc,UACjCjB,EAAYc,EAAQ5D,MAAQ4D,OAG5BI,OAAO,CACHR,OAAQpB,KAAKoB,OACbS,WAAYC,IAAID,cAI5BhB,EAAQkB,QAAU,WACdH,OAAO,CACHR,OAAQpB,KAAKoB,OACbS,WAAYC,IAAID,cAGxBhB,EAAQmB,SAIZjC,EAAKkC,cAAgBvB,EACrBT,EAAGiC,aAAa,aAAcT,KAAKU,UAAUpC,EAAKkC,gBAElD,IAAIG,EAAkB,IAAIC,YAAY,YAAcpC,EAAGsB,GAAI,CAAEe,OAAUvC,EAAKkC,gBAG5EhC,EAAGsC,cAAcH,IAIjBjC,EAA0B,SAACJ,EAAME,GAEjC,IAAIY,EAAU,IAAIC,eAGdC,EAAM,gCAAkChB,EAAKN,KAAO,aAAc,IAAIuB,MAAOC,UAGjFJ,EAAQK,KAAK,MAAOH,GAEpBF,EAAQM,OAAS,WACb,GAAInB,KAAKoB,QAAU,KAAOpB,KAAKoB,OAAS,IAAK,CACzCC,QAAQC,IAAI,8BAA+BrB,EAAGsB,IAG9CxB,EAAKkC,cAAgBO,EAAcf,KAAKC,MAAMb,EAAQc,WACtD1B,EAAGiC,aAAa,aAAcT,KAAKU,UAAUpC,EAAKkC,gBAGlD,IAAIG,EAAkB,IAAIC,YAAY,YAAcpC,EAAGsB,GAAI,CAAEe,OAAUvC,EAAKkC,gBAG5EhC,EAAGsC,cAAcH,QAGjBR,OAAO,CACHR,OAAQpB,KAAKoB,OACbS,WAAYC,IAAID,cAI5BhB,EAAQkB,QAAU,WACdH,OAAO,CACHR,OAAQpB,KAAKoB,OACbS,WAAYC,IAAID,cAGxBhB,EAAQmB,QAGRQ,EAAgB,SAACzC,GACjB,IAAI0C,EAAa,GAIjB,OAHA1C,EAAKY,QAAQ,SAACC,EAAGvD,GACboF,EAAW7B,EAAEhD,MAAQgD,IAElB6B,iCClKX,GAAsB,oBAAXpD,OACP,MAAM,IAAIC,MAAM,gEAMpBD,OAAOE,kBAAkB,eAAgB,CACrCC,OAAQ,CACJuB,IAAK,CAAErB,KAAM,UACbgD,SAAU,CAAEhD,KAAM,WAMtBG,UAAU,EAKVC,KAAM,WACF,IAAIC,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAEVF,EAAKgB,IACL4B,EAAuB5C,EAAME,GACtBF,EAAK2C,UACZE,EAAsB7C,EAAME,IAUpCI,OAAQ,SAAUC,GACHN,KAAKD,KACPC,KAAKC,IAOlBM,OAAQ,aAWRC,MAAO,aAMPC,KAAM,eAKV,IAAIkC,EAAyB,SAAC5C,EAAME,GAEhC,IAAIY,EAAU,IAAIC,eAGlBD,EAAQK,KAAK,MAAOnB,EAAKgB,KAEzBF,EAAQM,OAAS,WACb,GAAInB,KAAKoB,QAAU,KAAOpB,KAAKoB,OAAS,IAAK,CAIT,iBAArBP,EAAQc,UAAyBd,EAAQc,oBAAoBkB,OACpE9C,EAAKkC,cAAgBR,KAAKC,MAAMb,EAAQc,UAExC5B,EAAKkC,cAAgBpB,EAAQc,SAEjC1B,EAAGiC,aAAa,aAAcT,KAAKU,UAAUpC,EAAKkC,gBAGlD,IAAIG,EAAkB,IAAIC,YAAY,YAAcpC,EAAGsB,GAAI,CAAEe,OAAUvC,EAAKkC,gBAG5EhC,EAAGsC,cAAcH,QAGjBR,OAAO,CACHR,OAAQpB,KAAKoB,OACbS,WAAYC,IAAID,cAI5BhB,EAAQkB,QAAU,WACdH,OAAO,CACHR,OAAQpB,KAAKoB,OACbS,WAAYC,IAAID,cAGxBhB,EAAQmB,QAGRY,EAAwB,SAAC7C,EAAME,GAE/BF,EAAKkC,cAAgBR,KAAKC,MAAM3B,EAAK2C,UACrCzC,EAAGiC,aAAa,aAAcnC,EAAK2C,UAGnC,IAAIN,EAAkB,IAAIC,YAAY,YAAcpC,EAAGsB,GAAI,CAAEe,OAAUvC,EAAKkC,gBAG5EhC,EAAGsC,cAAcH,kCCvHrB,GAAsB,oBAAX/C,OACP,MAAM,IAAIC,MAAM,gEAMpBD,OAAOE,kBAAkB,YAAa,CAClCC,OAAQ,CACJsD,MAAO,CAAEpD,KAAM,UACfqD,MAAO,CAAErD,KAAM,UACfsD,OAAQ,CAAEtD,KAAM,WAMpBG,UAAU,EAKVC,KAAM,WACSE,KAAKD,KACPC,KAAKC,IASlBI,OAAQ,SAAUC,GACd,IAAIP,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAKVF,EAAKkD,aACyC,QAA1ChD,EAAGiD,WAAWC,SAASpD,KAAKqD,YAC5BnD,EAAGiD,WAAWC,SAASpD,KAAKiD,OAAUjD,EAAKkD,WAAWlD,EAAKiD,QAAU,IACrE/C,EAAGiD,WAAWC,SAASpD,KAAK+C,MAAQ/C,EAAKkD,WAAWlD,EAAK+C,QAAU,EACnE7C,EAAGiD,WAAWC,SAASpD,KAAKgD,MAAQhD,EAAKkD,WAAWlD,EAAKgD,QAAU,EACnE9C,EAAGiC,aAAa,WAAY,KAAOnC,EAAKkD,WAAWlD,EAAKiD,QAAU,IAAM,OAE5E/C,EAAGiD,WAAWC,SAAS9C,OAAOJ,EAAGiD,WAAWC,SAASpD,QAO7DQ,OAAQ,aAWRC,MAAO,aAMPC,KAAM,6CCvEV,GAAsB,oBAAXpB,OACT,MAAM,IAAIC,MAAM,gEAMlBD,OAAOE,kBAAkB,UAAW,CAClC8D,aAAc,CAAC,UAAW,aAC1B7D,OAAQ,CACN8D,KAAM,CAAE5D,KAAM,UACd6D,MAAO,CAAE7D,KAAM,WAMjBG,UAAU,EAKVC,KAAM,WACJ,IAAIC,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAEVuD,EAAiBC,SAASC,eAAe3D,EAAKuD,MAClD,GAAIE,EAAeG,aAAa,cAAe,CAC7C,IAAIC,EAAkBnC,KAAKC,MAAM8B,EAAeG,aAAa,eAExDC,EAAgB7D,EAAKwD,QAAWM,MAAMC,SAAS/D,EAAKwD,QAGvDQ,EAAehE,EAAME,EAAI2D,EAAgB7D,EAAKwD,QAF9CQ,EAAehE,EAAME,EAAI2D,EAAgB7F,OAAOiG,KAAKJ,GAAiBE,SAAS/D,EAAKwD,eAOtFE,SAASC,eAAe3D,EAAKuD,MAAMW,iBAAiB,YAAclE,EAAKuD,KAAM,SAAU1C,GAChFA,EAAE0B,OAAOvC,EAAKwD,QAAWM,MAAMC,SAAS/D,EAAKwD,SAIhDQ,EAAehE,EAAME,EAAIW,EAAE0B,OAAOvC,EAAKwD,QACvCtD,EAAGiC,aAAa,UAAW,gBAAiBnC,EAAKkC,iBAJjD8B,EAAehE,EAAME,EAAIW,EAAE0B,OAAOvE,OAAOiG,KAAKpD,EAAE0B,QAAQwB,SAAS/D,EAAKwD,UACtEtD,EAAGiC,aAAa,UAAW,gBAAiBnC,EAAKkC,mBAczD5B,OAAQ,SAAUC,GAChB,IAAIP,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAGVF,IAASO,IACPP,EAAKkC,gBAAkB3B,EAAQ2B,gBACjChC,EAAGiD,WAAWgB,UAAUnE,KAAKkD,WAAalD,EAAKkC,cAC/ChC,EAAGiD,WAAWgB,UAAU7D,OAAOJ,EAAGiD,WAAWgB,UAAUnE,OAErDA,EAAKuD,OAAShD,EAAQgD,OACxBjC,QAAQC,IAAI,yCAEZmC,SAASC,eAAe3D,EAAKuD,MAAMa,oBAAoB,YAAc7D,EAAQgD,KAAM,SAAU1C,MAE7F6C,SAASC,eAAe3D,EAAKuD,MAAMW,iBAAiB,YAAclE,EAAKuD,KAAM,SAAU1C,GACrFmD,EAAehE,EAAME,EAAIW,EAAE0B,OAAOvC,EAAKwD,QACvCtD,EAAGiD,WAAWgB,UAAUnE,KAAKkD,WAAalD,EAAKkC,cAC/ChC,EAAGiD,WAAWgB,UAAU7D,OAAOJ,EAAGiD,WAAWgB,UAAUnE,WAU/DQ,OAAQ,aAWRC,MAAO,aAMPC,KAAM,eAIR,IAAIsD,EAAiB,SAAChE,EAAME,EAAImE,GAC9BrE,EAAKkC,cAAgBmC,EACrBnE,EAAGiC,aAAa,aAAcT,KAAKU,UAAUiC,mCC1G/C,GAAsB,oBAAX/E,OACP,MAAM,IAAIC,MAAM,gEAMpBD,OAAOE,kBAAkB,qBAAsB,CAC3CC,OAAQ,CACJ6E,MAAO,CAAE3E,KAAM,UACf4E,OAAQ,CAAE5E,KAAM,WAMpBG,UAAU,EAKVC,KAAM,WACF,IAAIC,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAEVF,EAAKsE,OAAStE,EAAKuE,QACnBC,EAAUxE,EAAME,IASxBI,OAAQ,SAAUC,GACd,IAAIP,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAMVF,IAASO,IACLP,EAAKsE,QAAU/D,EAAQ+D,OAAStE,EAAKuE,SAAWhE,EAAQgE,SACxDjD,QAAQC,IAAI,yCAEZrB,EAAGkE,oBAAoB7D,EAAQ+D,MAAO,SAAUzD,MAEhD2D,EAAUxE,EAAME,MAQ5BM,OAAQ,aAWRC,MAAO,aAMPC,KAAM,eAIV,IAAI8D,EAAY,SAACxE,EAAME,GACnBA,EAAGgE,iBAAiBlE,EAAKsE,MAAO,SAAUzD,GAEtCX,EAAGuE,KAAKzE,EAAKuE,OAAQ1D,GAAG,oCCjFhC,GAAsB,oBAAXvB,OACP,MAAM,IAAIC,MAAM,gEAMpBD,OAAOE,kBAAkB,aAAc,CACnCC,OAAQ,CACJiF,WAAY,CAAE/E,KAAM,WAMxBG,UAAU,EAKVC,KAAM,WACF,IAAIC,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAEVF,EAAKsE,OAAStE,EAAKuE,QACnBI,EAAY3E,EAAME,IAS1BI,OAAQ,SAAUC,GACd,IAAIP,EAAOC,KAAKD,KACZE,EAAKD,KAAKC,GAKVF,IAASO,GACLP,EAAK0E,aAAenE,EAAQmE,aAC5BpD,QAAQC,IAAI,yCAEZrB,EAAGkE,oBAAoBpE,EAAK0E,WAAY,SAAU7D,MAElD8D,EAAY3E,EAAME,KAQ9BM,OAAQ,aAWRC,MAAO,aAMPC,KAAM,eAIV,IAAIiE,EAAc,SAAC3E,EAAME,GACrBA,EAAGgE,iBAAiBlE,EAAK0E,WAAY,SAAU7D,GAE3C+D,EAAe5E,EAAME,MAIzB0E,EAAiB,SAAC5E,EAAME,GACxB,IAAKA,EAAG2E,cAAc,eAAgB,CAElC,IAAIC,EAKZ,SAA4B9E,EAAME,EAAIgD,GAClC,IAEI6B,EAASrB,SAASsB,cAAc,WACpCD,EAAO5C,aAAa,QAAS,SAC7B4C,EAAO5C,aAAa,QAAS,cAC7B4C,EAAO5C,aAAa,QALO,IAM3B4C,EAAO5C,aAAa,SALM,IAM1B,IAAI8C,EAAY/E,EAAG0D,aAAa,YAC5BsB,EAAc,EACdC,EAAe,EACfjF,EAAG0D,aAAa,cAChBsB,EAAchF,EAAG0D,aAAa,YAAYb,MAC1CoC,EAAejF,EAAG0D,aAAa,YAAYX,QAE/C8B,EAAO5C,aAAa,WAAY,CAAEiD,EAAGH,EAAUG,EAAmB,EAAdF,EAAkB,EAAKG,EAAuBC,EAAG,EAAqB,EAAfH,EAAmB,EAAKI,EAAwBC,EAAGP,EAAUO,IAExK,IAAIC,EAAa/B,SAASsB,cAAc,UAQxC,OAPAS,EAAWtD,aAAa,QAAST,KAAKU,UAAUc,IAChDuC,EAAWtD,aAAa,QAlBG,IAmB3BsD,EAAWtD,aAAa,SAlBE,IAmB1BsD,EAAWtD,aAAa,QAAS,SACjCsD,EAAWtD,aAAa,WAAY,CAAEiD,EAAG,EAAIL,EAAOnB,aAAa,SAAW,EAAG0B,EAAG,EAAIpF,EAAG0D,aAAa,UAAY,EAAG4B,EAAG,IAExHT,EAAOW,YAAYD,GACZV,EA9BcY,CAAmB3F,EAAME,EAAIA,EAAG0D,aAAa,eAC9D1D,EAAGwF,YAAYZ,oBCxFvB,IAAAc,EAAA,GACAC,EAAA,IAAAC,MAAAC,QAqIA,SAAAC,EAAAhG,EAAAiG,EAAAC,GACA,IAAAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAAC,KAAAC,KAAAV,EAAAjG,EAAA4G,SAYA,IAVAR,EAAApG,EAAAoG,aACAC,EAAArG,EAAAqG,UACAH,IACAE,EAAApG,EAAA6G,OACAR,EAAArG,EAAA6G,QAGAN,EAAAO,EAAA9G,EAAA+G,MAAAN,GACAH,EAAAQ,EAAA9G,EAAA+G,MAAA/G,EAAA4G,SAEAJ,EAAA,EAAeA,EAAAC,EAAYD,IAC3B,IAAAL,EAAA,EAAoBA,EAAAnG,EAAA4G,QAAuBT,IAC3CN,EAAAmB,IAAA,OACA,IAAAhH,EAAAiH,MAAAC,QAAA,OACArB,EAAAT,GAAAe,EAAAG,GAAAF,GAEA,IAAApG,EAAAiH,MAAAC,QAAA,OACArB,EAAAP,GAAAa,EAAAG,GAAAF,GAEA,IAAApG,EAAAiH,MAAAC,QAAA,OACArB,EAAAP,GAAAkB,EAAAD,GAAAF,GAEA,IAAArG,EAAAiH,MAAAC,QAAA,OACArB,EAAAL,GAAAgB,EAAAD,GAAAF,GAEAc,EAAAtB,GAIA,OAAAD,EAOA,SAAAwB,EAAApH,EAAAiG,GACA,IAAA3I,EACA+J,EAEA,IAAA/J,EAAA,EAAaA,EAAA2I,EAAiB3I,IAI9B+J,EADAvD,MAAA9D,EAAAsH,OACAhK,GAAA,EAAAoJ,KAAAa,IAAAtB,EAEA3I,EAAA0C,EAAAsH,MAAA,aAGAzB,EAAAmB,IAAA,OACA,IAAAhH,EAAAiH,MAAAC,QAAA,OACArB,EAAAT,EAAApF,EAAAwH,OAAAd,KAAAe,IAAAJ,IAEA,IAAArH,EAAAiH,MAAAC,QAAA,OACArB,EAAAP,EAAAtF,EAAAwH,OAAAd,KAAAe,IAAAJ,IAEA,IAAArH,EAAAiH,MAAAC,QAAA,OACArB,EAAAP,EAAAtF,EAAAwH,OAAAd,KAAAgB,IAAAL,IAEA,IAAArH,EAAAiH,MAAAC,QAAA,OACArB,EAAAL,EAAAxF,EAAAwH,OAAAd,KAAAgB,IAAAL,IAEAF,EAAAtB,GAEA,OAAAD,EAQA,SAAA+B,EAAA3H,EAAAiG,GAEA,OADAjG,EAAA4G,QAAAX,EACAD,EAAAhG,EAAAiG,GAAA,GAOA,SAAA2B,EAAA5H,EAAAiG,GAUA,OATA4B,EACA,MACA,MACA,OACA,MACA,OACA,QAEAC,EAAA9H,EAAAwH,OAAA,GACA5B,EAOA,SAAAmC,EAAA/H,EAAAiG,GACA,IAAA+B,GAAA,EAAAtB,KAAAuB,KAAA,MACAC,EAAA,EAAAF,EACAG,EAAA,EAAAH,EACAI,GAAA,EAAAF,EACAG,GAAA,EAAAF,EAwBA,OAvBAN,GACA,EAAAM,EAAA,GACA,EAAAE,EAAA,EACA,KAAAF,EACA,KAAAE,EACA,IAAAF,EACA,IAAAE,EACA,EAAAF,EAAA,EACA,EAAAE,EAAA,EACAH,MACAA,IAAAE,EACAF,EAAAE,EAAAF,EACAA,EAAAE,IACAD,EAAA,IACAA,EAAA,KACAC,EAAAF,IACAE,EAAAF,EAAAE,EACAA,IAAAF,EACAE,MACAC,EAAA,IACAA,EAAA,MAEAP,EAAA9H,EAAAwH,OAAA,GACA5B,EAOA,SAAA0C,EAAAtI,EAAAiG,GACA,IAAAsC,EAAA7B,KAAAuB,KAAA,GACAO,GAAA,EAAA9B,KAAAuB,KAAA,GASA,OAPAJ,EACA,IAAAU,EAAAC,GACA,IAAAA,EACA,IAAAA,EACA,EALA,EAAA9B,KAAAuB,KAAA,KAKA,GAEAH,EAAA9H,EAAAwH,OAAA,GACA5B,EAUA,SAAAkB,EAAAC,EAAA0B,GACA,OAAA1B,GACA,YACA,OAAA0B,EAAA,EACA,aACA,OAAAA,EAAA,KACA,UACA,UAUA,SAAAX,EAAAY,GACA,IAAApL,EACA,IAAAA,EAAA,EAAaA,EAAAsI,EAAAzF,OAAsB7C,IACnCsI,EAAAtI,GAAAsI,EAAAtI,GAAAoL,EAUA,SAAAC,EAAAC,EAAAhD,EAAAiD,GACA,IAAAtK,EACAjB,EACAwL,EAIA,GAAAD,EACA,IAAAvL,EAAA,EAAeA,EAAAsL,EAAAzI,OAAgB7C,IAE/BiB,OADAA,EAAAqK,EAAAtL,GAAAsG,aAAAiF,MAEAC,EAAA,EAAA/E,SAAAxF,EAAA,IACAqK,EAAAtL,GAAAyL,SAAAC,SAAAhC,IAAApB,EAAAkD,GAAAlD,EAAAkD,EAAA,GACAlD,EAAAkD,EAAA,UAKA,IAAAxL,EAAA,EAAaA,EAAAsI,EAAAzF,OAAsB7C,GAAA,GACnC,IAAAsL,EAAAtL,EAAA,GAAsB,OACtBsL,EAAAtL,EAAA,GAAAyL,SAAAC,SAAAhC,IAAApB,EAAAtI,GAAAsI,EAAAtI,EAAA,GAAAsI,EAAAtI,EAAA,KAIA,SAAAuK,IACA,IAAAvK,EACA,IAAAA,EAAA,EAAaA,EAAA2L,UAAA9I,OAAsB7C,IACnCsI,EAAAsD,KAAA5L,GAIA,SAAA6J,EAAAgC,GACAvD,EAAAsD,KAAAC,EAAA/D,GACAQ,EAAAsD,KAAAC,EAAA7D,GACAM,EAAAsD,KAAAC,EAAA3D,GAnWAlG,OAAAE,kBAAA,UACAC,OAAA,CACA6H,MAAA,CAAY3H,KAAA,SAAAyJ,SAAA,EAAAC,IAAA,EAAAC,IAAA,IAAAC,GAAA,CAAuD5J,KAAA,aACnEiH,QAAA,CAAcwC,QAAA,EAAAC,IAAA,EAAAE,GAAA,CAAyB5J,KAAA,UACvCkH,OAAA,CAAauC,QAAA,EAAAC,IAAA,EAAAE,GAAA,CAAyB5J,KAAA,iBACtCyG,aAAA,CAAmBgD,QAAA,EAAAC,IAAA,EAAAE,GAAA,CAAyB5J,KAAA,UAC5C0G,UAAA,CAAgB+C,QAAA,EAAAC,IAAA,EAAAE,GAAA,CAAyB5J,KAAA,UACzCkJ,eAAA,CAAqBO,QAAA,IACrBnC,MAAA,CAAYmC,QAAA,MACZ5B,OAAA,CAAa4B,QAAA,EAAAC,IAAA,EAAAE,GAAA,CAAyB5J,KAAA,6CACtC6J,QAAA,CAAcJ,SAAA,GACdzJ,KAAA,CAAWyJ,QAAA,OAAAK,MAAA,6CACX,YACAC,KAAA,CAAWN,SAAA,EAAAG,GAAA,CAAoB5J,KAAA,aAC/BoH,MAAA,CAAYqC,QAAA,MAAAK,MAAA,2BAMZ1J,KAAA,WACA,IAAA4J,EAAA1J,KACAC,EAAAD,KAAAC,GAEAD,KAAA2J,SAAA1J,EAAA2J,mBACA5J,KAAA6J,iBAAA,GAEA7J,KAAA2J,SAAAhJ,QAAA,SAAAmJ,GACA,GAAAA,EAAAC,UAA8B,OAAAC,IAE9B,SAAAA,IACAN,EAAAG,iBAAAZ,KAAAa,EAAAhB,SAAAC,SAAA5D,GACAuE,EAAAG,iBAAAZ,KAAAa,EAAAhB,SAAAC,SAAA1D,GACAqE,EAAAG,iBAAAZ,KAAAa,EAAAhB,SAAAC,SAAAxD,GAJAuE,EAAA7F,iBAAA,SAAA+F,KAQAhK,KAAAiK,oBAAAjK,KAAAiK,oBAAApL,KAAAmB,MACAA,KAAAkK,oBAAAlK,KAAAkK,oBAAArL,KAAAmB,MAEAC,EAAAgE,iBAAA,iBAAAjE,KAAAiK,qBACAhK,EAAAgE,iBAAA,iBAAAjE,KAAAkK,qBACAjK,EAAAgE,iBAAA,gBAAAjE,KAAAK,OAAAxB,KAAAmB,QAMAK,OAAA,SAAAC,GACA,IAEA6J,EAEAnE,EACAoE,EALAT,EAAA3J,KAAA2J,SACA5J,EAAAC,KAAAD,KAEAE,EAAAD,KAAAC,GAOA,OAHA+F,EAAA2D,EAAAzJ,OAGAH,EAAAL,MACA,UACA0K,EAAArE,EACA,MAEA,aACAqE,EAAAjD,EACA,MAEA,WACAiD,EAAAzC,EACA,MAEA,mBACAyC,EAAAtC,EACA,MAEA,cACAsC,EAAA/B,EACA,MAEA,QAEA+B,EAAA1C,EAIAyC,EAAAlK,EAAAoK,gBAAA,UACA1E,EAAAzF,OAAA,EACAyF,EAAAyE,EACArK,EAAAiG,EACA,iBAAAmE,GACA,IAAAA,EAAAlD,QAAA,UACA,WAAAkD,GAEApK,EAAAwJ,SAAuB5D,EAAA4D,UACvBb,EAAAiB,EAAAhE,EAAA5F,EAAA6I,iBAMArI,OAAA,WACAP,KAAAC,GAAAkE,oBAAA,iBAAAnE,KAAAiK,qBACAjK,KAAAC,GAAAkE,oBAAA,iBAAAnE,KAAAkK,qBACAxB,EAAA1I,KAAA2J,SAAA3J,KAAA6J,mBAGAI,oBAAA,SAAAK,GAEA,IAAArK,EAAAD,KAAAC,GACAqK,EAAAhI,OAAArC,GAAAsK,aAAAtK,IACAD,KAAA2J,SAAAV,KAAAqB,EAAAhI,OAAArC,IACAD,KAAAK,WAGA6J,oBAAA,SAAAI,IAEA,IAAAtK,KAAA2J,SAAA1C,QAAAqD,EAAAhI,OAAArC,MACAD,KAAA2J,SAAAa,OAAAxK,KAAA2J,SAAA1C,QAAAqD,EAAAhI,OAAArC,IAAA,GACAD,KAAA6J,iBAAAW,OAAAxK,KAAA2J,SAAA1C,QAAAqD,EAAAhI,OAAArC,IAAA,GACAD,KAAAK,aA+CAjD,EAAAD,QAAA4I,kBAmCA3I,EAAAD,QAAAgK,qBAUA/J,EAAAD,QAAAuK,mBAiBAtK,EAAAD,QAAAwK,mBAoCAvK,EAAAD,QAAA2K,2BAkBA1K,EAAAD,QAAAkL,uCCjSA,IAAAoC,EAAgBxN,EAAQ,GAExB,uBAAAoC,OACA,UAAAC,MAAA,gEAGA,IAAAoL,EAAA,CACAC,OAAA,GACAC,gBAAA,GACAC,OAAA,KACAC,SAAA,GACAC,aAAA,KACAC,WAAA,KACAC,OAAA,KACAC,UAAA,IACAC,cAAA,MA8hBA,SAAAC,EAAAC,EAAAC,GACA,QAAAjO,EAAA,EAAiBA,EAAAgO,EAAAnL,OAAkB7C,IACnC,GAAAgO,EAAAhO,GAAAkE,KAAA+J,EAA+B,OAAAD,EAAAhO,GAE/B,YA/hBAgC,OAAAE,kBAAA,kBACAC,OAAA,CACAsH,MAAA,CAAYqC,QAAA,OAAAK,MAAA,2BACZ+B,cAAA,CAAoB7L,KAAA,MAAAyJ,QAAA,KACpBqC,QAAA,CAAc9L,KAAA,SAEd+L,KAAA,CAAWtC,QAAA,mBACXuC,KAAA,CAAWhM,KAAA,YACXiM,UAAA,CAAgBxC,QAAA,KAChByC,yBAAA,CAA+BzC,SAAA,GAC/B0C,WAAA,CAAiBnM,KAAA,QAAAyJ,QAAA,WACjB2C,SAAA,CAAepM,KAAA,MAAAyJ,QAAA,IACf4C,WAAA,CAAiBrM,KAAA,QAAAyJ,QAAA,QACjB6C,SAAA,CAAetM,KAAA,QAAAyJ,QAAA,WACf8C,cAAA,CAAoBvM,KAAA,QAAAyJ,QAAA,WACpB+C,cAAA,CAAoBxM,KAAA,QAAAyJ,QAAA,WACpBgD,MAAA,CAAYzM,KAAA,SAAAyJ,QAAA,IACZiD,WAAA,CAAiB1M,KAAA,QAAAyJ,QAAA,QACjBkD,UAAA,CAAgB3M,KAAA,MAAAyJ,QAAA,GAChBmD,MAAA,CAAYnD,QAAA,SACZoD,KAAA,CAAWpD,SAAA,GACX7K,MAAA,CAAYoB,KAAA,SAAAyJ,QAAA,IACZrG,MAAA,CAAYqG,QAAA,KAGZrJ,KAAA,WACAE,KAAAC,GAAAgE,iBAAA,QAAAjE,KAAAwM,MAAA3N,KAAAmB,OACAA,KAAAyM,kBAAA,GACAzM,KAAA0M,gBAAA,GAEA1M,KAAAgE,KAAA,KACAhE,KAAA2M,SAAA,EACA3M,KAAA4M,SAAA,KACA5M,KAAA6M,cAAA,KACA7M,KAAA8M,OAAA,EAEA9M,KAAA+M,SAAA/M,KAAAD,KAAAzB,MACA0B,KAAAgN,aAAAhN,KAAAD,KAAAzB,MAEA0B,KAAAiN,eAAA,KACAjN,KAAAkN,WAAA,EAGAlN,KAAAmN,MAAA1J,SAAAsB,cAAA,YACA/E,KAAAmN,MAAAC,UAAAC,IAAA,uBACArN,KAAAmN,MAAAC,UAAAC,IAAA,sBACArN,KAAAmN,MAAAlJ,iBAAA,wBAAAjE,KAAAsN,MAAAzO,KAAAmB,OACAA,KAAAmN,MAAAlJ,iBAAA,gCAAAjE,KAAAuN,KAAA1O,KAAAmB,OACAA,KAAAC,GAAAwF,YAAAzF,KAAAmN,OAGAnN,KAAAmM,MAAA1I,SAAAsB,cAAA,YACA/E,KAAAmM,MAAAjK,aAAA,QACA4E,MAAA,SACA2E,KAAAzL,KAAAD,KAAA0L,KACA+B,SAAA,SACAC,WAAA,GACAnP,MAAA0B,KAAAD,KAAAoM,MACAuB,MAAA1N,KAAAD,KAAAqM,WACAtJ,MAAA9C,KAAAD,KAAA+C,MACA6K,UAAA,KACA3N,KAAAC,GAAAwF,YAAAzF,KAAAmM,OAGAnM,KAAA4N,UAAAnK,SAAAsB,cAAA,YACA/E,KAAA4N,UAAA1L,aAAA,QACA4E,MAAA9G,KAAAD,KAAA+G,MACA2E,KAAAzL,KAAAD,KAAA0L,KACAnN,MAAA0B,KAAAD,KAAAzB,MACAoP,MAAA1N,KAAAD,KAAA8L,WACA/I,MAAA9C,KAAAD,KAAA+C,MACA6K,UAAA,KAEA3N,KAAAC,GAAAwF,YAAAzF,KAAA4N,WAEA5N,KAAA6N,OAAApK,SAAAsB,cAAA,YACA/E,KAAA6N,OAAA/E,SAAAC,SAAAhC,IAAA,UACA/G,KAAA6N,OAAA3L,aAAA,YAA0C4L,OAAA,OAAAJ,MAAA1N,KAAAD,KAAA8L,aAC1C7L,KAAA4N,UAAAnI,YAAAzF,KAAA6N,QACA7N,KAAA+N,eAAA,EAEA/N,KAAA+L,WAAA,IAAAlG,MAAAmI,MACAhO,KAAAiM,cAAA,IAAApG,MAAAmI,MACAhO,KAAAkM,cAAA,IAAArG,MAAAmI,MAEA,IAAAtE,EAAA1J,KACAyD,SAAAQ,iBAAA,mBAAAgK,GACA,SAAAA,EAAArP,IAAA,CAIA,IAHA,IAAAsP,EAAA,GACA9O,EAAA,2DACA9B,EAAAmJ,KAAA0H,MAAA,GAAA1H,KAAA2H,UACA/Q,EAAA,EAAuBA,EAAAC,EAAOD,IAAA6Q,GAAA9O,EAAAqH,KAAA0H,MAAA1H,KAAA2H,SAAAhP,EAAAc,SAC9BwJ,EAAAzJ,GAAAiC,aAAA,kBAAgD5D,MAAA4P,OAIhDzK,SAAAQ,iBAAA,OAAAjE,KAAAkB,KAAArC,KAAAmB,OAEAA,KAAA0L,KAAA,KACA1L,KAAAqO,kBAAA,EACArO,KAAAsO,UAAA,MAGAjO,OAAA,SAAAC,GACA,IAAAiO,EAAA9D,EAAAzK,KAAAD,KAAAuM,OACAkC,EAAAxO,KAAAD,KAAA+C,MACA2L,EAAAzO,KAAAD,KAAA+C,MAAA,EAIA,QAAA4L,IAAAH,EAAA,CAKAjO,GAAAN,KAAAgN,eAAA1M,EAAA0M,aAKAhN,KAAA2O,gBAAA3O,KAAA4O,OAAA5O,KAAA+M,YAJA/M,KAAA+M,SAAA/M,KAAAD,KAAAzB,MACA0B,KAAAgN,aAAAhN,KAAAD,KAAAzB,MACA0B,KAAA2O,gBAAA3O,KAAA4O,OAAA5O,KAAAD,KAAAzB,SAKA0B,KAAAD,KAAA+C,QAAAxC,EAAAwC,OACA9C,KAAAD,KAAAiD,SAAA1C,EAAA0C,QACAhD,KAAAD,KAAAiM,WAAA1L,EAAA0L,WACAhM,KAAAmN,MAAAjL,aAAA,YAA2CkB,UAAA,QAAAN,MAAA0L,EAAAxL,OAAAyL,IAC3CzO,KAAAmN,MAAAjL,aAAA,YACA4L,OAAA,OACAe,IAAA7O,KAAAD,KAAA4L,UAAA,IAAA4C,EAAAO,IACApB,MAAA1N,KAAAD,KAAAiM,SACA+C,aAAA,KAIA/O,KAAAD,KAAAoM,QAAA7L,EAAA6L,OACAnM,KAAAD,KAAAqM,aAAA9L,EAAA8L,YACApM,KAAAD,KAAA+C,QAAAxC,EAAAwC,QACA9C,KAAAmM,MAAAjK,aAAA,QACA5D,MAAA0B,KAAAD,KAAAoM,MAAAuB,MAAA1N,KAAAD,KAAAqM,WAAAtJ,MAAA9C,KAAAD,KAAA+C,QACA9C,KAAAmM,MAAArD,SAAAC,SAAAhC,IAAA,KAAAyH,GAAA,MAGAxO,KAAAD,KAAA+C,QAAAxC,EAAAwC,OACA9C,KAAAD,KAAAgM,aAAAzL,EAAAyL,YACA/L,KAAAgP,oBAGA,IAAAC,EAAA,WAAAjP,KAAAD,KAAA+G,MAAAyH,EAAAW,aAAAV,EAAA,EACA,UAAAxO,KAAAD,KAAA+G,QAAsCmI,IAAA,GAEtCjP,KAAAD,KAAA0L,OAAAnL,EAAAmL,MACAzL,KAAAD,KAAA8L,aAAAvL,EAAAuL,YACA7L,KAAAD,KAAA+C,QAAAxC,EAAAwC,OACA9C,KAAAD,KAAA+G,QAAAxG,EAAAwG,OACA9G,KAAA4N,UAAA1L,aAAA,QACAuJ,KAAAzL,KAAAD,KAAA0L,KACAiC,MAAA1N,KAAAD,KAAA8L,WACA/I,MAAA0L,EACAb,UAAAY,EAAAZ,UACA7G,MAAA9G,KAAAD,KAAA+G,QAKA,QAAAzJ,EAAA,EAAmBA,EAAAkR,EAAAY,OAAAjP,OAA0B7C,IAAA,CAC7C,IAAA+R,EAAAb,EAAAY,OAAA9R,GACA,WAAA+R,EAAAxQ,MACAoB,KAAAqP,UAAAD,GAIApP,KAAA4N,UAAA9E,SAAAC,SAAAhC,IACAkI,EACAT,EAAA,GAAAxO,KAAAqP,UAAAhK,EAAArF,KAAAqP,UAAAZ,EAAA,GAAAD,EAAA,EAAAD,EAAAe,aAAAd,EACA,MAGAxO,KAAAD,KAAA+C,QAAAxC,EAAAwC,OACA9C,KAAA6N,OAAA3L,aAAA,YACAkB,UAAA,QAAAN,MAAA,IAAA0L,EAAAxL,OAAA,IAAAwL,IAGAxO,KAAAuP,uBACAvP,KAAAwP,YAEAxP,KAAA+L,WAAAhF,IAAA/G,KAAAD,KAAAgM,YACA/L,KAAAiM,cAAAlF,IAAA/G,KAAAD,KAAAkM,eACAjM,KAAAkM,cAAAnF,IAAA/G,KAAAD,KAAAmM,eAEAlM,KAAAD,KAAAwM,KACAvM,KAAAkB,OAEAlB,KAAAyP,aAlFApO,QAAAqO,MAAA,gCAAA1P,KAAAD,KAAAuM,MAAA,iBAsFAqD,KAAA,SAAAC,GACA,IAAAC,EAEA,KAAA7P,KAAA6M,eAAA+C,EAAA5P,KAAA6M,cAAA7M,KAAAD,KAAA+L,UACA,GAAA9L,KAAA6M,eAIA,GAAA7M,KAAAsO,WACAtO,KAAA2M,UAEAkD,EAAA7P,KAAAsO,UAAAwB,gBAAA9P,KAAAmN,QAKA,IAFA,IAAA4C,EAAAF,EAAAE,GACA/L,EAAAyG,EAAAzK,KAAAD,KAAAuM,OAAA6C,OACA9R,EAAA,EAAmBA,EAAA2G,EAAA9D,OAAiB7C,IAAA,CACpC,IAAA2S,EAAAhM,EAAA3G,GACA,GAAA0S,EAAA5K,EAAA6K,EAAA7K,GAAA4K,EAAA5K,EAAA6K,EAAA7K,EAAA6K,EAAAxB,GAAA,EAAAuB,EAAA1K,EAAA2K,EAAA3K,GAAA,EAAA0K,EAAA1K,EAAA2K,EAAA3K,EAAA2K,EAAAvB,EAAA,CACAzO,KAAA4M,WAAAoD,IAEAhQ,KAAA4M,SAAAoD,EACAhQ,KAAAiQ,oBAAAjQ,KAAA4M,SAAAhO,IAAAoB,KAAAiM,gBAEA,aAnBAjM,KAAA6M,cAAA+C,GAwBAnP,KAAA,WACAT,KAAA+N,eACA/N,KAAAkQ,iBAGA1P,MAAA,WACAR,KAAAmQ,gBAMAnB,kBAAA,WACA,IAAAoB,EAAApQ,KAAAoQ,cAAA3M,SAAAsB,cAAA,YACAqL,EAAAhD,UAAAC,IAAA,8BACA+C,EAAAtH,SAAAC,SAAAxD,EAAA,KACA6K,EAAAtH,SAAAuH,SAAA,EACAD,EAAAlO,aAAA,YAA4CkB,UAAA,UAC5CgN,EAAAlO,aAAA,YAA4C4L,OAAA,OAAAJ,MAAA1N,KAAAD,KAAAgM,WAC5CgD,aAAA,IACAqB,EAAAnM,iBAAA,gCAAAqG,GACA,aAAAA,EAAAhI,OAAA1E,OACAoC,KAAAsQ,YAAA,QAAAC,SAAAC,SAAA3K,MAAA4K,oBAEAzQ,KAAAC,GAAAwF,YAAA2K,IAMAH,oBAAA,SAAArR,EAAA8O,GACA,IAAAa,EAAA9D,EAAAzK,KAAAD,KAAAuM,OACA8D,EAAApQ,KAAAoQ,cAGA,GAAAxR,EAAA,CAKA,QAAAvB,EAAA,EAAmBA,EAAAkR,EAAAY,OAAAjP,OAA0B7C,IAAA,CAC7C,IAAA+R,EAAAb,EAAAY,OAAA9R,GACA,GAAA+R,EAAAxQ,QAAA,CACA,IAAA4P,EAAAxO,KAAAD,KAAA+C,MACA2L,EAAAzO,KAAAD,KAAA+C,MAAA,EACA4N,EAAAlC,EAAA,EACAmC,EAAAlC,EAAA,EACAmC,EAAAxB,EAAAZ,IACAqC,EAAAzB,EAAAX,IAEA2B,EAAAtH,SAAAL,MAAAtD,EAAAyL,EACAR,EAAAtH,SAAAL,MAAApD,EAAAwL,EAEAT,EAAAtH,SAAAC,SAAA5D,EAAAiK,EAAAjK,EAAAqJ,EAAAkC,EAAAE,EAAA,EACAR,EAAAtH,SAAAC,SAAA1D,GAAA,EAAA+J,EAAA/J,GAAAoJ,EAAAkC,EAAAE,EAAA,EAEAT,EAAAE,YAAA,QAAAC,SAAA7C,MAAAoD,KAAApD,GACA,OAEA0C,EAAAtH,SAAAuH,SAAA,OAvBAD,EAAAtH,SAAAuH,SAAA,GA0BAb,UAAA,WAkBA,GAjBAxP,KAAA0L,MAAA1L,KAAA0L,KAAAqF,cACA/Q,KAAA0L,KAAAsF,gBAAA,aAEAhR,KAAAD,KAAA2L,KACA1L,KAAA0L,KAAA1L,KAAAD,KAAA2L,KAEA1L,KAAA0L,KAAAjI,SAAAmB,cAAA,CACA,WACA,kBACA,qBACA,0BACA,4BACA,kBACA,8CACAqM,KAAA,MAGAjR,KAAA0L,KAEK,CACL,IAAA1L,KAAA0L,KAAA3B,UAEA,YADA/J,KAAA0L,KAAAzH,iBAAA,SAAAjE,KAAAwP,UAAA3Q,KAAAmB,OAGA,IAAAsO,EAAAtO,KAAA0L,KAAAxI,WAAA,UACAgO,EAAA,GAEA,GAAA5C,GAUA,GADAtO,KAAA0L,KAAAqF,cAAA,EACA/Q,KAAAD,KAAA6L,yBAAA,CACA,IAAAuF,EAAA7C,EAAAvO,KAAAqR,QAAAC,MAAA,MACA,IAAAF,EAAAlK,QAAA,yBACAkK,EAAAlI,KAAA,wBAEAiI,EAAAE,QAAAD,EAAAF,KAAA,KAAAK,QAAA,SACAtR,KAAA0L,KAAAxJ,aAAA,YAAAgP,SAfAlR,KAAA0L,KAAAqF,cAAA,EACAG,EAAAK,SAAAvR,KAAAD,KAAAwM,KACA2E,EAAAM,QAAAxR,KAAAD,KAAAwM,KACAvM,KAAAD,KAAA6L,2BACAsF,EAAAE,QAAA,wBAEApR,KAAA0L,KAAAxJ,aAAA,YAAAgP,GAaAlR,KAAAsO,UAAAtO,KAAA0L,KAAAxI,WAAAoL,eA7BAjN,QAAAqO,MAAA,sIAiCAd,OAAA,SAAA6C,GACA,QAAAA,EAAqB,SACrB,QAAApU,EAAA,EAAmBA,EAAA2C,KAAAD,KAAAyL,QAAAtL,OAA8B7C,IACjD,OAAA2C,KAAAD,KAAAyL,QAAAnO,IACA,aACA2C,KAAAiN,iBAAAwE,EAAAzR,KAAAiN,eAAAwE,IACA,MAEA,eACAA,IAAAC,cACA,MAEA,eACAD,IAAAE,cACA,MAEA,YACAF,IAAAJ,MAAA,KAAAO,IAAA,SAAAxS,GAAiD,OAAAA,EAAA,GAAAsS,cAAAtS,EAAAyS,OAAA,KAA2CZ,KAAA,KAC5F,MAEA,cACAQ,IAAAJ,MAAA,IAAAzC,OAAA,SAAAlR,GAAmD,OAAAmG,MAAAC,SAAApG,KAAA,MAAAA,IAA2CuT,KAAA,IAC9F,MAEA,YACAQ,IAAA,GAAAC,cAAAD,EAAAI,OAAA,GACA,MAEA,WACAJ,IAAAK,OAKA,OAAA9R,KAAAD,KAAAsM,UAAA,EAAAoF,EAAAI,OAAA,EAAA7R,KAAAD,KAAAsM,WAAAoF,GAGAjF,MAAA,SAAAyB,GACA,GAAAjO,KAAA4M,SAAA,CAEA,OAAA5M,KAAA4M,SAAAhO,KACA,YACAoB,KAAA+R,SACA,MAEA,aACA,OAEA,aACA/R,KAAA+M,SAAA/M,KAAA+M,SAAA8E,OAAA,EAAA7R,KAAA+M,SAAA7M,OAAA,GACA,IAAA8R,EAAAhS,KAAA4O,OAAA5O,KAAA+M,UACA/M,KAAAC,GAAAiC,aAAA,yBAAA8P,GACAhS,KAAA2O,gBAAAqD,GACAhS,KAAAyM,kBAAAnO,MAAA0T,EACAhS,KAAAC,GAAAuE,KAAA,sBAAAxE,KAAAyM,mBACA,MAEA,YACAzM,KAAA8M,OAAA9M,KAAA8M,MACA9M,KAAA4M,SAAA3M,GAAAiC,aAAA,mBACAlC,KAAA8M,MAAA9M,KAAAD,KAAAkM,cAAAjM,KAAAD,KAAAgM,YAEA,MAEA,aACA/L,KAAAiS,UACA,MAEA,QACA,GAAAjS,KAAAD,KAAAsM,UAAA,GAAArM,KAAA+M,SAAA7M,OAAAF,KAAAD,KAAAsM,UAAoF,MACpFrM,KAAA+M,UAAA/M,KAAA8M,MAAA9M,KAAA4M,SAAAhO,IAAA8S,cAAA1R,KAAA4M,SAAAhO,IACAoT,EAAAhS,KAAA4O,OAAA5O,KAAA+M,UACA/M,KAAAC,GAAAiC,aAAA,yBAAA8P,GACAhS,KAAA2O,gBAAAqD,GACAhS,KAAAyM,kBAAAnO,MAAA0T,EACAhS,KAAAC,GAAAuE,KAAA,sBAAAxE,KAAAyM,mBAKAzM,KAAAiQ,oBAAAjQ,KAAA4M,SAAAhO,IAAAoB,KAAAkM,eACA,IAAAxC,EAAA1J,KACAkS,WAAA,WACAxI,EAAAuG,oBAAAvG,EAAAkD,SAAAhO,IAAA8K,EAAAuC,gBACK,KACLjM,KAAAuP,yBAGArO,KAAA,WACAlB,KAAAC,GAAA6I,SAAAuH,SAAA,EACArQ,KAAA0L,MAAA1L,KAAA0L,KAAAqF,cACA/Q,KAAA0L,KAAAxJ,aAAA,aAA2CqP,UAAA,EAAAC,SAAA,KAI3C/B,MAAA,WACAzP,KAAAC,GAAA6I,SAAAuH,SAAA,EACArQ,KAAA0L,MAAA1L,KAAA0L,KAAAqF,cACA/Q,KAAA0L,KAAAxJ,aAAA,aAA2CqP,UAAA,EAAAC,SAAA,KAI3CO,OAAA,WACA/R,KAAAC,GAAA6I,SAAAuH,SAAA,EACArQ,KAAA0L,MAAA1L,KAAA0L,KAAAqF,cACA/Q,KAAA0L,KAAAxJ,aAAA,aAA2CqP,UAAA,EAAAC,SAAA,IAE3CxR,KAAAC,GAAAuE,KAAA,sBAAwClG,MAAA0B,KAAAD,KAAAzB,QACxC0B,KAAAD,KAAAwM,MAAA,GAGA0F,QAAA,WACAjS,KAAAD,KAAAzB,MAAA0B,KAAAgN,aACAhN,KAAA2O,kBACA3O,KAAAC,GAAA6I,SAAAuH,SAAA,EACArQ,KAAA0L,MAAA1L,KAAA0L,KAAAqF,cACA/Q,KAAA0L,KAAAxJ,aAAA,aAA2CqP,UAAA,EAAAC,SAAA,IAE3CxR,KAAAC,GAAAuE,KAAA,wBACAxE,KAAAD,KAAAwM,MAAA,GAGAgB,KAAA,SAAAU,GACAjO,KAAA2M,SAAA,EACA3M,KAAA4M,UAAA,UAAA5M,KAAA4M,SAAAhO,KACAoB,KAAAiQ,oBAAAjQ,KAAA4M,SAAAhO,IAAAoB,KAAA+L,YAEA/L,KAAA4M,SAAA,MAGAU,MAAA,SAAAW,GACAjO,KAAA2M,SAAA,GAGAuD,cAAA,WACAlQ,KAAAmQ,eACAnQ,KAAAkN,WAAAiF,OAAAC,YAAApS,KAAAqS,MAAAxT,KAAAmB,WAAAD,KAAAwL,gBAGA4E,aAAA,WACAgC,OAAAG,cAAAtS,KAAAkN,YACAlN,KAAAkN,WAAA,GAGAmF,MAAA,WACArS,KAAA6N,OAAA/E,SAAAuH,SAAArQ,KAAA6N,OAAA/E,SAAAuH,SAGAkC,gBAAA,SAAAC,GACAxS,KAAAiN,eAAAuF,GAGAC,eAAA,SAAA7U,EAAA0O,GACA1O,IACA6M,EAAA7M,GAAA0O,IAGAiD,qBAAA,WACA,IAAA9D,EAAAzL,KAAA4N,UAAA1K,WAAAwP,KAAAC,YACA,IAAAlH,EAAA,CACA,IAAA/B,EAAA1J,KAMA,OALAA,KAAA6N,OAAA/E,SAAAuH,SAAA,OACA8B,OAAAD,WAAA,WACAxI,EAAA6F,uBACA7F,EAAAwG,iBACO,KAIP,IAAA1B,EAAAxO,KAAAD,KAAA+C,MACAyL,EAAA9D,EAAAzK,KAAAD,KAAAuM,OACAsG,GAAA5S,KAAAqP,UAAAZ,EAAA,EAAAD,EAAA,IAAAD,EAAAe,aAAAd,EACAqE,EAAA7S,KAAAD,KAAA+C,MAAA9C,KAAA4N,UAAA1K,WAAAwP,KAAA3S,KAAA4N,UACAmF,EAAA,EACAC,EAAArI,EAAA1K,KAAA4N,UAAA1K,WAAAwP,KAAA3S,KAAA0L,WACAiD,IAAAqE,IAAmCA,EAAA,IACnC,QAAA1V,EAAA,EAAmBA,EAAA2C,KAAAD,KAAAzB,MAAA4B,OAA4B7C,IAAA,CAC/C,IAAA2V,EAAA5H,EAAAK,EAAAJ,MAAArL,KAAAD,KAAAzB,MAAA2U,WAAA5V,IACAyV,GAAAE,EAAAlQ,MAAAkQ,EAAAE,UAAA,KAAAF,EAAAzR,GAAA,KAEA,WAAAvB,KAAAD,KAAA+G,MACAgM,IAAAD,EAAAE,EAAA,YAAAvE,EACK,SAAAxO,KAAAD,KAAA+G,OACLgM,IAAAD,EAAAE,EAAA,UAAAvE,EACAsE,GAAAtE,EAAA,GACK,UAAAxO,KAAAD,KAAA+G,QACLgM,KAAAD,EAAAE,EAAA,UAAAvE,EACAsE,GAAAtE,EAAA,GAEAxO,KAAA6N,OAAA/E,SAAAC,SAAAhC,IAAA+L,EAAAF,EAAA,MACA5S,KAAA+N,eAAA,GAGAY,gBAAA,SAAArQ,GACA0B,KAAA0M,gBAAApO,SAAA0B,KAAAD,KAAAzB,MACA0B,KAAA4N,UAAA1L,aAAA,OAAAlC,KAAA0M,mCC1iBAtP,EAAAD,QAAA,CACAgW,MAAA,CAAYxF,UAAA,GAAA2B,aAAA,KAAAJ,aAAA,IAAAJ,IAAA,eAAAK,OAAA,EAAuFvQ,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,SAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAAgE,CAAG7P,IAAA,QAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA+D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,IAAAmJ,EAAA,IAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,IAAAmJ,EAAA,IAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,IAAAmJ,EAAA,IAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,IAAAmJ,EAAA,IAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,IAAAmJ,EAAA,KAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,IAAAmJ,EAAA,IAAAC,EAAA,MAAwD,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,IAAAmJ,EAAA,KAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,IAAAmJ,EAAA,KAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,IAAAmJ,EAAA,IAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAAyD,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,IAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA0D,CAAG7P,IAAA,QAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA+D,CAAG7P,IAAA,SAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAAgE,CAAG7P,IAAA,SAAAuG,EAAA,KAAAE,EAAA,EAAAmJ,EAAA,KAAAC,EAAA,QACrkF2E,OAAA,CAAazF,UAAA,GAAA2B,aAAA,KAAAJ,aAAA,IAAAJ,IAAA,gBAAAK,OAAA,EAAwFvQ,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA0D,CAAG7P,IAAA,IAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA2D,CAAG7P,IAAA,IAAAuG,EAAA,IAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA0D,CAAG7P,IAAA,SAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAAgE,CAAG7P,IAAA,QAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAA+D,CAAG7P,IAAA,SAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,MAAgE,CAAG7P,IAAA,SAAAuG,EAAA,KAAAE,EAAA,KAAAmJ,EAAA,KAAAC,EAAA,uBCCn9B,IAEAiB,GAAA2D,EAFAhU,OAAAiU,MAAAD,OAEA,+BAEAE,EAAA,IAAA1N,MAAA2N,WAEAnU,OAAAE,kBAAA,iBACAC,OAAA,CACAiU,aAAA,CAAmBtK,SAAA,GACnBuK,UAAA,CAAgBvK,QAAA,EAAAC,IAAA,GAChBuK,eAAA,CAAqBxK,QAAA,GAAAC,IAAA,GACrBwK,cAAA,CAAoBzK,QAAA,GAAAC,IAAA,GACpBqC,KAAA,CAAW/L,KAAA,QAAAyJ,QAAA,2GACXnG,OAAA,CAAamG,QAAA,IAAAC,IAAA,GACbyK,KAAA,CAAW1K,QAAA,GAAAC,IAAA,GACX0K,MAAA,CAAY3K,QAAA,SAAAK,MAAA,sBACZuK,OAAA,CAAa5K,QAAA,SAAAK,MAAA,mBACblL,MAAA,CAAY6K,QAAA,KAOZ9I,OAAA,SAAAC,GACA,IAAAP,EAAAC,KAAAD,KAGAiU,EAFAhU,KAAAC,GAEAgU,oBAAA,OAAApO,MAAAqO,MACAnU,EAAA0L,KAAA0I,cAAAtR,OAEA0Q,EAAAa,KAAArU,EAAA0L,KAAA,SAAA9J,GACA,IAAA0S,EAAAhV,OAAAiU,MAAAgB,MAAAvU,GACAsU,EAAA5I,KAAA9J,EACAqS,EAAA7Q,SAAA,IAAA0C,MAAA0O,aAAAxU,EAAAzB,MAAA+V,KAEKtU,EAAA0L,KAAA0I,cAAApW,OAELiW,EAAA7Q,SAAA,IAAA0C,MAAA0O,aAAAxU,EAAAzB,MAAAyB,GAEA2P,EAAA","file":"aframe-visdata-components.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import './querier_github'\nimport './querier_json'\nimport './vismapper'\nimport './visdata'\nimport './interaction-mapper'\nimport './debug_data'\nimport 'aframe-layout-component'\nimport 'aframe-super-keyboard'\nimport 'aframe-text-geometry-component'\n\n\n","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('querier_github', {\n    schema: {\n        user: { type: 'string' },\n        token: { type: 'string' },\n        repos: { type: 'array' }\n    },\n\n    /**\n    * Set if component needs multiple instancing.\n    */\n    multiple: false,\n\n    /**\n    * Called once when component is attached. Generally for initial setup.\n    */\n    init: function () {\n        let data = this.data;\n        let el = this.el;\n\n        if (data.user && (data.repos.length === 0)) {\n            requestAllReposFromUser(data, el)\n        } else if (data.repos.length > 0) {\n            requestReposFromList(data, el)\n        }\n\n    },\n\n    /**\n    * Called when component is attached and when component data changes.\n    * Generally modifies the entity based on the data.\n    */\n\n    update: function (oldData) {\n        var data = this.data;\n        var el = this.el;\n\n    },\n    /**\n    * Called when a component is removed (e.g., via removeAttribute).\n    * Generally undoes all modifications to the entity.\n    */\n    remove: function () { },\n\n    /**\n    * Called on each scene tick.\n    */\n    // tick: function (t) { },\n\n    /**\n    * Called when entity pauses.\n    * Use to stop or remove any dynamic or background behavior such as events.\n    */\n    pause: function () { },\n\n    /**\n    * Called when entity resumes.\n    * Use to continue or add any dynamic or background behavior such as events.\n    */\n    play: function () { },\n\n})\n\nlet requestReposFromList = (data, el) => {\n    let dataOfRepos = {}\n\n    data.repos.forEach((e, i) => {\n        // Create a new request object\n        let request = new XMLHttpRequest();\n\n        // Create url\n        let url = \"https://api.github.com/repos/\" + data.user + \"/\" + e + \"?_=\" + new Date().getTime();\n\n        // Initialize a request\n        request.open('get', url, false)\n        // Send it\n        request.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                console.log(\"data OK in request.response\", el.id)\n\n                // Save data\n                let rawData = JSON.parse(request.response)\n                dataOfRepos[rawData.name] = rawData;\n\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        request.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        request.send();\n    })\n\n    // Save data\n    data.dataRetrieved = dataOfRepos\n    el.setAttribute(\"dataEntity\", JSON.stringify(data.dataRetrieved))\n    // Create the event\n    var dataEventLoaded = new CustomEvent(\"dataReady\" + el.id, { \"detail\": data.dataRetrieved });\n\n    // Dispatch/Trigger/Fire the event\n    el.dispatchEvent(dataEventLoaded);\n}\n\n\nlet requestAllReposFromUser = (data, el) => {\n    // Create a new request object\n    let request = new XMLHttpRequest();\n\n    // Create url\n    let url = \"https://api.github.com/users/\" + data.user + \"/repos?_=\" + new Date().getTime();\n\n    // Initialize a request\n    request.open('get', url)\n    // Send it\n    request.onload = function () {\n        if (this.status >= 200 && this.status < 300) {\n            console.log(\"data OK in request.response\", el.id)\n\n            // Save data\n            data.dataRetrieved = allReposParse(JSON.parse(request.response))\n            el.setAttribute(\"dataEntity\", JSON.stringify(data.dataRetrieved))\n\n            // Create the event\n            var dataEventLoaded = new CustomEvent(\"dataReady\" + el.id, { \"detail\": data.dataRetrieved });\n\n            // Dispatch/Trigger/Fire the event\n            el.dispatchEvent(dataEventLoaded);\n\n        } else {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        }\n    };\n    request.onerror = function () {\n        reject({\n            status: this.status,\n            statusText: xhr.statusText\n        });\n    };\n    request.send();\n}\n\nlet allReposParse = (data) => {\n    let dataParsed = {}\n    data.forEach((e, i) => {\n        dataParsed[e.name] = e\n    });\n    return dataParsed\n}","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('querier_json', {\n    schema: {\n        url: { type: 'string' },\n        embedded: { type: 'string' }\n    },\n\n    /**\n    * Set if component needs multiple instancing.\n    */\n    multiple: false,\n\n    /**\n    * Called once when component is attached. Generally for initial setup.\n    */\n    init: function () {\n        let data = this.data;\n        let el = this.el;\n\n        if (data.url) {\n            requestJSONDataFromURL(data, el)\n        } else if (data.embedded) {\n            parseEmbeddedJSONData(data, el)\n        }\n\n    },\n\n    /**\n    * Called when component is attached and when component data changes.\n    * Generally modifies the entity based on the data.\n    */\n\n    update: function (oldData) {\n        var data = this.data;\n        var el = this.el;\n\n    },\n    /**\n    * Called when a component is removed (e.g., via removeAttribute).\n    * Generally undoes all modifications to the entity.\n    */\n    remove: function () { },\n\n    /**\n    * Called on each scene tick.\n    */\n    // tick: function (t) { },\n\n    /**\n    * Called when entity pauses.\n    * Use to stop or remove any dynamic or background behavior such as events.\n    */\n    pause: function () { },\n\n    /**\n    * Called when entity resumes.\n    * Use to continue or add any dynamic or background behavior such as events.\n    */\n    play: function () { },\n\n})\n\n\nlet requestJSONDataFromURL = (data, el) => {\n    // Create a new request object\n    let request = new XMLHttpRequest();\n\n    // Initialize a request\n    request.open('get', data.url)\n    // Send it\n    request.onload = function () {\n        if (this.status >= 200 && this.status < 300) {\n            //console.log(\"data OK in request.response\", request.response)\n\n            // Save data\n            if (typeof request.response === 'string' || request.response instanceof String) {\n                data.dataRetrieved = JSON.parse(request.response)\n            } else {\n                data.dataRetrieved = request.response\n            }\n            el.setAttribute(\"dataEntity\", JSON.stringify(data.dataRetrieved))\n\n            // Create the event\n            var dataEventLoaded = new CustomEvent(\"dataReady\" + el.id, { \"detail\": data.dataRetrieved });\n\n            // Dispatch/Trigger/Fire the event\n            el.dispatchEvent(dataEventLoaded);\n\n        } else {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        }\n    };\n    request.onerror = function () {\n        reject({\n            status: this.status,\n            statusText: xhr.statusText\n        });\n    };\n    request.send();\n}\n\nlet parseEmbeddedJSONData = (data, el) => {\n    // Save data\n    data.dataRetrieved = JSON.parse(data.embedded)\n    el.setAttribute(\"dataEntity\", data.embedded)\n\n    // Create the event\n    var dataEventLoaded = new CustomEvent(\"dataReady\" + el.id, { \"detail\": data.dataRetrieved });\n\n    // Dispatch/Trigger/Fire the event\n    el.dispatchEvent(dataEventLoaded);\n}","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('vismapper', {\n    schema: {\n        width: { type: 'string' },\n        depth: { type: 'string' },\n        height: { type: 'string' }\n    },\n\n    /**\n    * Set if component needs multiple instancing.\n    */\n    multiple: false,\n\n    /**\n    * Called once when component is attached. Generally for initial setup.\n    */\n    init: function () {\n        let data = this.data;\n        let el = this.el;\n\n    },\n\n    /**\n    * Called when component is attached and when component data changes.\n    * Generally modifies the entity based on the data.\n    */\n\n    update: function (oldData) {\n        var data = this.data;\n        var el = this.el;\n\n        /**\n         * Update geometry component\n         */\n        if (data.dataToShow) {\n            if (el.components.geometry.data.primitive === \"box\") {\n                el.components.geometry.data.height = (data.dataToShow[data.height] / 100)\n                el.components.geometry.data.width = data.dataToShow[data.width] || 2\n                el.components.geometry.data.depth = data.dataToShow[data.depth] || 2\n                el.setAttribute(\"position\", \"0 \" + data.dataToShow[data.height] / 200 + \" 0\")\n            }\n            el.components.geometry.update(el.components.geometry.data)\n        }\n    },\n    /**\n    * Called when a component is removed (e.g., via removeAttribute).\n    * Generally undoes all modifications to the entity.\n    */\n    remove: function () { },\n\n    /**\n    * Called on each scene tick.\n    */\n    // tick: function (t) { },\n\n    /**\n    * Called when entity pauses.\n    * Use to stop or remove any dynamic or background behavior such as events.\n    */\n    pause: function () { },\n\n    /**\n    * Called when entity resumes.\n    * Use to continue or add any dynamic or background behavior such as events.\n    */\n    play: function () { },\n\n})\n","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('visdata', {\n  dependencies: ['querier', 'vismapper'],\n  schema: {\n    from: { type: 'string' },\n    index: { type: 'string' }\n  },\n\n  /**\n  * Set if component needs multiple instancing.\n  */\n  multiple: false,\n\n  /**\n  * Called once when component is attached. Generally for initial setup.\n  */\n  init: function () {\n    let data = this.data;\n    let el = this.el;\n\n    let querierElement = document.getElementById(data.from)\n    if (querierElement.getAttribute('dataEntity')) {\n      let dataFromQuerier = JSON.parse(querierElement.getAttribute('dataEntity'));\n      // Get if key or index\n      if (!dataFromQuerier[data.index] && !isNaN(parseInt(data.index))) {\n        saveEntityData(data, el, dataFromQuerier[Object.keys(dataFromQuerier)[parseInt(data.index)]])\n      } else {\n        saveEntityData(data, el, dataFromQuerier[data.index])\n      }\n\n    } else {\n      // Get if key or index\n      document.getElementById(data.from).addEventListener('dataReady' + data.from, function (e) {\n        if (!e.detail[data.index] && !isNaN(parseInt(data.index))) {\n          saveEntityData(data, el, e.detail[Object.keys(e.detail)[parseInt(data.index)]])\n          el.setAttribute(\"visdata\", \"dataRetrieved\", data.dataRetrieved)\n        } else {\n          saveEntityData(data, el, e.detail[data.index])\n          el.setAttribute(\"visdata\", \"dataRetrieved\", data.dataRetrieved)\n        }\n      })\n    }\n  },\n\n  /**\n  * Called when component is attached and when component data changes.\n  * Generally modifies the entity based on the data.\n  */\n\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n\n    // If entry it means that the data changed\n    if (data !== oldData) {\n      if (data.dataRetrieved !== oldData.dataRetrieved) {\n        el.components.vismapper.data.dataToShow = data.dataRetrieved;\n        el.components.vismapper.update(el.components.vismapper.data)\n      }\n      if (data.from !== oldData.from) {\n        console.log(\"Change event because from has changed\")\n        // Remove the event of the old querier\n        document.getElementById(data.from).removeEventListener('dataReady' + oldData.from, function (e) { })\n        // Listen the event when querier ready\n        document.getElementById(data.from).addEventListener('dataReady' + data.from, function (e) {\n          saveEntityData(data, el, e.detail[data.index])\n          el.components.vismapper.data.dataToShow = data.dataRetrieved;\n          el.components.vismapper.update(el.components.vismapper.data)\n        });\n      }\n    }\n\n  },\n  /**\n  * Called when a component is removed (e.g., via removeAttribute).\n  * Generally undoes all modifications to the entity.\n  */\n  remove: function () { },\n\n  /**\n  * Called on each scene tick.\n  */\n  // tick: function (t) { },\n\n  /**\n  * Called when entity pauses.\n  * Use to stop or remove any dynamic or background behavior such as events.\n  */\n  pause: function () { },\n\n  /**\n  * Called when entity resumes.\n  * Use to continue or add any dynamic or background behavior such as events.\n  */\n  play: function () { },\n\n})\n\nlet saveEntityData = (data, el, dataToSave) => {\n  data.dataRetrieved = dataToSave\n  el.setAttribute(\"dataEntity\", JSON.stringify(dataToSave))\n}","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('interaction-mapper', {\n    schema: {\n        input: { type: 'string' },\n        output: { type: 'string' }\n    },\n\n    /**\n    * Set if component needs multiple instancing.\n    */\n    multiple: false,\n\n    /**\n    * Called once when component is attached. Generally for initial setup.\n    */\n    init: function () {\n        let data = this.data;\n        let el = this.el;\n\n        if (data.input && data.output) {\n            mapEvents(data, el);\n        }\n    },\n\n    /**\n    * Called when component is attached and when component data changes.\n    * Generally modifies the entity based on the data.\n    */\n\n    update: function (oldData) {\n        var data = this.data;\n        var el = this.el;\n\n        /**\n         * Update geometry component\n         */\n        // If entry it means that the properties changed\n        if (data !== oldData) {\n            if (data.input !== oldData.input || data.output !== oldData.output) {\n                console.log(\"Change event because from has changed\")\n                // Remove the event of the old interaction\n                el.removeEventListener(oldData.input, function (e) { })\n                // Listen and map the new event\n                mapEvents(data, el);\n            }\n        }\n    },\n    /**\n    * Called when a component is removed (e.g., via removeAttribute).\n    * Generally undoes all modifications to the entity.\n    */\n    remove: function () { },\n\n    /**\n    * Called on each scene tick.\n    */\n    // tick: function (t) { },\n\n    /**\n    * Called when entity pauses.\n    * Use to stop or remove any dynamic or background behavior such as events.\n    */\n    pause: function () { },\n\n    /**\n    * Called when entity resumes.\n    * Use to continue or add any dynamic or background behavior such as events.\n    */\n    play: function () { },\n\n})\n\nlet mapEvents = (data, el) => {\n    el.addEventListener(data.input, function (e) {\n        // Dispatch/Trigger/Fire the event\n        el.emit(data.output, e, false);\n    });\n}","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('debug_data', {\n    schema: {\n        inputEvent: { type: 'string' }\n    },\n\n    /**\n    * Set if component needs multiple instancing.\n    */\n    multiple: false,\n\n    /**\n    * Called once when component is attached. Generally for initial setup.\n    */\n    init: function () {\n        let data = this.data;\n        let el = this.el;\n\n        if (data.input && data.output) {\n            listenEvent(data, el);\n        }\n    },\n\n    /**\n    * Called when component is attached and when component data changes.\n    * Generally modifies the entity based on the data.\n    */\n\n    update: function (oldData) {\n        var data = this.data;\n        var el = this.el;\n\n        /**\n         * Update geometry component\n         */\n        if (data !== oldData) {\n            if (data.inputEvent !== oldData.inputEvent) {\n                console.log(\"Change event because from has changed\")\n                // Remove the event of the old interaction\n                el.removeEventListener(data.inputEvent, function (e) { })\n                // Listen and map the new event\n                listenEvent(data, el);\n            }\n        }\n    },\n    /**\n    * Called when a component is removed (e.g., via removeAttribute).\n    * Generally undoes all modifications to the entity.\n    */\n    remove: function () { },\n\n    /**\n    * Called on each scene tick.\n    */\n    // tick: function (t) { },\n\n    /**\n    * Called when entity pauses.\n    * Use to stop or remove any dynamic or background behavior such as events.\n    */\n    pause: function () { },\n\n    /**\n    * Called when entity resumes.\n    * Use to continue or add any dynamic or background behavior such as events.\n    */\n    play: function () { },\n\n})\n\nlet listenEvent = (data, el) => {\n    el.addEventListener(data.inputEvent, function (e) {\n        // Dispatch/Trigger/Fire the event\n        showDebugPlane(data, el)\n    });\n}\n\nlet showDebugPlane = (data, el) => {\n    if (!el.querySelector('.debug_data')) {\n        // Get data from the attribute of the entity\n        let debugPanel = generateDebugPanel(data, el, el.getAttribute('dataEntity'));\n        el.appendChild(debugPanel)\n    }\n}\n\nfunction generateDebugPanel(data, el, dataToShow) {\n    const HEIGHT_PLANE_DEBUG = 10\n    const WIDTH_PLANE_DEBUG = 10\n    let entity = document.createElement('a-plane');\n    entity.setAttribute('color', 'white');\n    entity.setAttribute('class', 'debug_data');\n    entity.setAttribute('width', HEIGHT_PLANE_DEBUG);\n    entity.setAttribute('height', WIDTH_PLANE_DEBUG);\n    let parentPos = el.getAttribute(\"position\")\n    let parentWidth = 0; \n    let parentHeight = 0;\n    if (el.getAttribute(\"geometry\")) {\n        parentWidth = el.getAttribute(\"geometry\").width\n        parentHeight = el.getAttribute(\"geometry\").height\n    }\n    entity.setAttribute('position', { x: parentPos.x + (parentWidth * 1 / 2) + WIDTH_PLANE_DEBUG / 2, y: 0 - ( parentHeight * 1 / 2) + HEIGHT_PLANE_DEBUG / 2, z: parentPos.z });\n\n    let textEntity = document.createElement('a-text');\n    textEntity.setAttribute('value', JSON.stringify(dataToShow));\n    textEntity.setAttribute('width', HEIGHT_PLANE_DEBUG);\n    textEntity.setAttribute('height', WIDTH_PLANE_DEBUG);\n    textEntity.setAttribute('color', 'black');\n    textEntity.setAttribute('position', { x: 0 - entity.getAttribute('width') / 2, y: 0 - el.getAttribute(\"height\") / 2, z: 0 });\n\n    entity.appendChild(textEntity)\n    return entity;\n}","var positions = [];\nvar positionHelper = new THREE.Vector3();\n\n/**\n * Layout component for A-Frame.\n * Some layouts adapted from http://www.vb-helper.com/tutorial_platonic_solids.html\n */\nAFRAME.registerComponent('layout', {\n  schema: {\n    angle: {type: 'number', default: false, min: 0, max: 360, if: {type: ['circle']}},\n    columns: {default: 1, min: 0, if: {type: ['box']}},\n    margin: {default: 1, min: 0, if: {type: ['box', 'line']}},\n    marginColumn: {default: 1, min: 0, if: {type: ['box']}},\n    marginRow: {default: 1, min: 0, if: {type: ['box']}},\n    orderAttribute: {default: ''},\n    plane: {default: 'xy'},\n    radius: {default: 1, min: 0, if: {type: ['circle', 'cube', 'dodecahedron', 'pyramid']}},\n    reverse: {default: false},\n    type: {default: 'line', oneOf: ['box', 'circle', 'cube', 'dodecahedron', 'line',\n                                    'pyramid']},\n    fill: {default: true, if: {type: ['circle']}},\n    align: {default: 'end', oneOf: ['start', 'center', 'end']}\n  },\n\n  /**\n   * Store initial positions in case need to reset on component removal.\n   */\n  init: function () {\n    var self = this;\n    var el = this.el;\n\n    this.children = el.getChildEntities();\n    this.initialPositions = [];\n\n    this.children.forEach(function getInitialPositions (childEl) {\n      if (childEl.hasLoaded) { return _getPositions(); }\n      childEl.addEventListener('loaded', _getPositions);\n      function _getPositions () {\n        self.initialPositions.push(childEl.object3D.position.x);\n        self.initialPositions.push(childEl.object3D.position.y);\n        self.initialPositions.push(childEl.object3D.position.z);\n      }\n    });\n\n    this.handleChildAttached = this.handleChildAttached.bind(this);\n    this.handleChildDetached = this.handleChildDetached.bind(this);\n\n    el.addEventListener('child-attached', this.handleChildAttached);\n    el.addEventListener('child-detached', this.handleChildDetached);\n    el.addEventListener('layoutrefresh', this.update.bind(this));\n  },\n\n  /**\n   * Update child entity positions.\n   */\n  update: function (oldData) {\n    var children = this.children;\n    var data = this.data;\n    var definedData;\n    var el = this.el;\n    var numChildren;\n    var positionFn;\n\n    numChildren = children.length;\n\n    // Calculate different positions based on layout shape.\n    switch (data.type) {\n      case 'box': {\n        positionFn = getBoxPositions;\n        break;\n      }\n      case 'circle': {\n        positionFn = getCirclePositions;\n        break;\n      }\n      case 'cube': {\n        positionFn = getCubePositions;\n        break;\n      }\n      case 'dodecahedron': {\n        positionFn = getDodecahedronPositions;\n        break;\n      }\n      case 'pyramid': {\n        positionFn = getPyramidPositions;\n        break;\n      }\n      default: {\n        // Line.\n        positionFn = getLinePositions;\n      }\n    }\n\n    definedData = el.getDOMAttribute('layout');\n    positions.length = 0;\n    positions = positionFn(\n      data, numChildren,\n      typeof definedData === 'string'\n        ? definedData.indexOf('margin') !== -1\n        : 'margin' in definedData\n    );\n    if (data.reverse) { positions.reverse(); }\n    setPositions(children, positions, data.orderAttribute);\n  },\n\n  /**\n   * Reset positions.\n   */\n  remove: function () {\n    this.el.removeEventListener('child-attached', this.handleChildAttached);\n    this.el.removeEventListener('child-detached', this.handleChildDetached);\n    setPositions(this.children, this.initialPositions);\n  },\n\n  handleChildAttached: function (evt) {\n    // Only update if direct child attached.\n    var el = this.el;\n    if (evt.detail.el.parentNode !== el) { return; }\n    this.children.push(evt.detail.el);\n    this.update();\n  },\n\n  handleChildDetached: function (evt) {\n    // Only update if direct child detached.\n    if (this.children.indexOf(evt.detail.el) === -1) { return; }\n    this.children.splice(this.children.indexOf(evt.detail.el), 1);\n    this.initialPositions.splice(this.children.indexOf(evt.detail.el), 1);\n    this.update();\n  }\n});\n\n/**\n * Get positions for `box` layout.\n */\nfunction getBoxPositions (data, numChildren, marginDefined) {\n  var column;\n  var marginColumn;\n  var marginRow;\n  var offsetColumn;\n  var offsetRow;\n  var row;\n  var rows = Math.ceil(numChildren / data.columns);\n\n  marginColumn = data.marginColumn;\n  marginRow = data.marginRow;\n  if (marginDefined) {\n    marginColumn = data.margin;\n    marginRow = data.margin;\n  }\n\n  offsetRow = getOffsetItemIndex(data.align, rows);\n  offsetColumn = getOffsetItemIndex(data.align, data.columns);\n\n  for (row = 0; row < rows; row++) {\n    for (column = 0; column < data.columns; column++) {\n      positionHelper.set(0, 0, 0);\n      if (data.plane.indexOf('x') === 0) {\n        positionHelper.x = (column - offsetColumn) * marginColumn;\n      }\n      if (data.plane.indexOf('y') === 0) {\n        positionHelper.y = (column - offsetColumn) * marginColumn;\n      }\n      if (data.plane.indexOf('y') === 1) {\n        positionHelper.y = (row - offsetRow) * marginRow;\n      }\n      if (data.plane.indexOf('z') === 1) {\n        positionHelper.z = (row - offsetRow) * marginRow;\n      }\n      pushPositionVec3(positionHelper);\n    }\n  }\n\n  return positions;\n}\nmodule.exports.getBoxPositions = getBoxPositions;\n\n/**\n * Get positions for `circle` layout.\n */\nfunction getCirclePositions (data, numChildren) {\n  var i;\n  var rad;\n\n  for (i = 0; i < numChildren; i++) {\n    rad;\n\n    if (isNaN(data.angle)) {\n      rad = i * (2 * Math.PI) / numChildren;\n    } else {\n      rad = i * data.angle * 0.01745329252;  // Angle to radian.\n    }\n\n    positionHelper.set(0, 0, 0);\n    if (data.plane.indexOf('x') === 0) {\n      positionHelper.x = data.radius * Math.cos(rad);\n    }\n    if (data.plane.indexOf('y') === 0) {\n      positionHelper.y = data.radius * Math.cos(rad);\n    }\n    if (data.plane.indexOf('y') === 1) {\n      positionHelper.y = data.radius * Math.sin(rad);\n    }\n    if (data.plane.indexOf('z') === 1) {\n      positionHelper.z = data.radius * Math.sin(rad);\n    }\n    pushPositionVec3(positionHelper);\n  }\n  return positions;\n}\nmodule.exports.getCirclePositions = getCirclePositions;\n\n/**\n * Get positions for `line` layout.\n * TODO: 3D margins.\n */\nfunction getLinePositions (data, numChildren) {\n  data.columns = numChildren;\n  return getBoxPositions(data, numChildren, true);\n}\nmodule.exports.getLinePositions = getLinePositions;\n\n/**\n * Get positions for `cube` layout.\n */\nfunction getCubePositions (data, numChildren) {\n  pushPositions(\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n    -1, 0, 0,\n    0, -1, 0,\n    0, 0, -1\n  );\n  scalePositions(data.radius / 2);\n  return positions;\n}\nmodule.exports.getCubePositions = getCubePositions;\n\n/**\n * Get positions for `dodecahedron` layout.\n */\nfunction getDodecahedronPositions (data, numChildren) {\n  var PHI = (1 + Math.sqrt(5)) / 2;\n  var B = 1 / PHI;\n  var C = 2 - PHI;\n  var NB = -1 * B;\n  var NC = -1 * C;\n  pushPositions(\n    -1, C, 0,\n    -1, NC, 0,\n    0, -1, C,\n    0, -1, NC,\n    0, 1, C,\n    0, 1, NC,\n    1, C, 0,\n    1, NC, 0,\n    B, B, B,\n    B, B, NB,\n    B, NB, B,\n    B, NB, NB,\n    C, 0, 1,\n    C, 0, -1,\n    NB, B, B,\n    NB, B, NB,\n    NB, NB, B,\n    NB, NB, NB,\n    NC, 0, 1,\n    NC, 0, -1\n  );\n  scalePositions(data.radius / 2);\n  return positions;\n}\nmodule.exports.getDodecahedronPositions = getDodecahedronPositions;\n\n/**\n * Get positions for `pyramid` layout.\n */\nfunction getPyramidPositions (data, numChildren) {\n  var SQRT_3 = Math.sqrt(3);\n  var NEG_SQRT_1_3 = -1 / Math.sqrt(3);\n  var DBL_SQRT_2_3 = 2 * Math.sqrt(2 / 3);\n  pushPositions(\n    0, 0, SQRT_3 + NEG_SQRT_1_3,\n    -1, 0, NEG_SQRT_1_3,\n    1, 0, NEG_SQRT_1_3,\n    0, DBL_SQRT_2_3, 0\n  );\n  scalePositions(data.radius / 2);\n  return positions;\n}\nmodule.exports.getPyramidPositions = getPyramidPositions;\n\n/**\n * Return the item index in a given list to calculate offsets from\n *\n * @param {string} align - One of `'start'`, `'center'`, `'end'`\n * @param {integer} numItems - Total number of items\n */\nfunction getOffsetItemIndex (align, numItems) {\n  switch (align) {\n    case 'start':\n      return numItems - 1;\n    case 'center':\n      return (numItems - 1) / 2;\n    case 'end':\n      return 0;\n  }\n}\n\n/**\n * Multiply all coordinates by a scale factor and add translate.\n *\n * @params {array} positions - Array of coordinates in array form.\n * @returns {array} positions\n */\nfunction scalePositions (scale) {\n  var i;\n  for (i = 0; i < positions.length; i++) {\n    positions[i] = positions[i] * scale;\n  }\n};\n\n/**\n * Set position on child entities.\n *\n * @param {array} els - Child entities to set.\n * @param {array} positions - Array of coordinates.\n */\nfunction setPositions (els, positions, orderAttribute) {\n  var value;\n  var i;\n  var orderIndex;\n\n  // Allow for controlling order explicitly since DOM order does not have as much\n  // meaning in A-Frame.\n  if (orderAttribute) {\n    for (i = 0; i < els.length; i++) {\n      value = els[i].getAttribute(orderAttribute);\n      if (value === null || value === undefined) { continue; }\n      orderIndex = parseInt(value, 10) * 3;\n      els[i].object3D.position.set(positions[orderIndex], positions[orderIndex + 1],\n                                   positions[orderIndex + 2]);\n    }\n    return;\n  }\n\n  for (i = 0; i < positions.length; i += 3) {\n    if (!els[i / 3]) { return; }\n    els[i / 3].object3D.position.set(positions[i], positions[i + 1], positions[i + 2]);\n  }\n}\n\nfunction pushPositions () {\n  var i;\n  for (i = 0; i < arguments.length; i++) {\n    positions.push(i);\n  }\n}\n\nfunction pushPositionVec3 (vec3) {\n  positions.push(vec3.x);\n  positions.push(vec3.y);\n  positions.push(vec3.z);\n}\n","/* global AFRAME */\nvar KEYBOARDS = require('./keyboards');\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nvar FontFactors = {\n  roboto: 17,\n  aileronsemibold: 20,\n  dejavu: 20.5,\n  exo2bold: 20,\n  exo2semibold: 20.3,\n  kelsonsans: 22.8,\n  monoid: 19.5,\n  mozillavr: 9.5,\n  sourcecodepro: 20.3\n};\n\nAFRAME.registerComponent('super-keyboard', {\n  schema: {\n    align: {default: 'left', oneOf: ['left', 'center', 'right']},\n    blinkingSpeed: {type: 'int', default: 400},\n    filters: {type: 'array'},\n    // roboto aileronsemibold dejavu exo2bold exo2semibold kelsonsans monoid sourcecodepro\n    font: {default: 'aileronsemibold'},\n    hand: {type: 'selector'},\n    imagePath: {default: '.'},\n    injectToRaycasterObjects: {default: true},\n    inputColor: {type: 'color', default: '#6699ff'},\n    interval: {type: 'int', default: 50},\n    keyBgColor: {type: 'color', default: '#000'},\n    keyColor: {type: 'color', default: '#6699ff'},\n    keyHoverColor: {type: 'color', default: '#1A407F'},\n    keyPressColor: {type: 'color', default: '#5290F6'},\n    label: {type: 'string', default: ''},\n    labelColor: {type: 'color', default: '#aaa'},\n    maxLength: {type: 'int', default: 0},\n    model: {default: 'basic'},\n    show: {default: true},\n    value: {type: 'string', default: ''},\n    width: {default: 0.8}\n  },\n\n  init: function () {\n    this.el.addEventListener('click', this.click.bind(this));\n    this.changeEventDetail = {};\n    this.textInputObject = {};\n\n    this.keys = null;\n    this.focused = false;\n    this.keyHover = null;\n    this.prevCheckTime = null;\n    this.shift = false;\n\n    this.rawValue = this.data.value;\n    this.defaultValue = this.data.value;\n\n    this.userFilterFunc = null;\n    this.intervalId = 0;\n\n    // Create keyboard image.\n    this.kbImg = document.createElement('a-entity');\n    this.kbImg.classList.add('keyboardRaycastable');\n    this.kbImg.classList.add('superKeyboardImage');\n    this.kbImg.addEventListener('raycaster-intersected', this.hover.bind(this));\n    this.kbImg.addEventListener('raycaster-intersected-cleared', this.blur.bind(this));\n    this.el.appendChild(this.kbImg);\n\n    // Create label.\n    this.label = document.createElement('a-entity');\n    this.label.setAttribute('text', {\n      align: 'center',\n      font: this.data.font,\n      baseline: 'bottom',\n      lineHeight: 40,\n      value: this.data.label,\n      color: this.data.labelColor,\n      width: this.data.width,\n      wrapCount: 30});\n    this.el.appendChild(this.label);\n\n    // Create input.\n    this.textInput = document.createElement('a-entity');\n    this.textInput.setAttribute('text', {\n      align: this.data.align,\n      font: this.data.font,\n      value: this.data.value,\n      color: this.data.inputColor,\n      width: this.data.width,\n      wrapCount: 20\n    });\n    this.el.appendChild(this.textInput);\n\n    this.cursor = document.createElement('a-entity');\n    this.cursor.object3D.position.set(0, 0, 0.001);\n    this.cursor.setAttribute('material', {shader: 'flat', color: this.data.inputColor});\n    this.textInput.appendChild(this.cursor);\n    this.cursorUpdated = false;\n\n    this.keyBgColor = new THREE.Color();\n    this.keyHoverColor = new THREE.Color();\n    this.keyPressColor = new THREE.Color();\n\n    var self = this;\n    document.addEventListener('keydown', function (ev) {\n      if (ev.key === 't') {\n        var ss = '';\n        var s = 'abcdefghijklmopqrstuvQWIEUTGASDLIGKBXACQWETL102394676457';\n        var l = Math.floor(Math.random() * 20);\n        for (var i = 0; i < l; i++) ss += s[Math.floor(Math.random() * s.length)];\n        self.el.setAttribute('super-keyboard', {value: ss});\n      }\n    });\n\n    document.addEventListener('show', this.open.bind(this));\n\n    this.hand = null;\n    this.handListenersSet = false;\n    this.raycaster = null;\n  },\n\n  update: function (oldData) {\n    var kbdata = KEYBOARDS[this.data.model];\n    var w = this.data.width;\n    var h = this.data.width / 2;\n    var w2 = w / 2;\n    var h2 = h / 2;\n\n    if (kbdata === undefined) {\n      console.error('super-keyboard ERROR: model \"' + this.data.model + '\" undefined.');\n      return;\n    }\n\n    if (!oldData || this.defaultValue !== oldData.defaultValue) {\n      this.rawValue = this.data.value;\n      this.defaultValue = this.data.value;\n      this.updateTextInput(this.filter(this.data.value));\n    } else {\n      this.updateTextInput(this.filter(this.rawValue));\n    }\n\n    if (this.data.width !== oldData.width ||\n        this.data.height !== oldData.height ||\n        this.data.keyColor !== oldData.keyColor) {\n      this.kbImg.setAttribute('geometry', {primitive: 'plane', width: w, height: h});\n      this.kbImg.setAttribute('material', {\n        shader: 'flat',\n        src: this.data.imagePath + '/' + kbdata.img,\n        color: this.data.keyColor,\n        transparent: true\n      });\n    }\n\n    if (this.data.label !== oldData.label ||\n        this.data.labelColor !== oldData.labelColor ||\n        this.data.width !== oldData.width) {\n      this.label.setAttribute('text', {\n        value: this.data.label, color: this.data.labelColor, width: this.data.width});\n      this.label.object3D.position.set(0, 0.3 * w, -0.02);\n    }\n\n    if (this.data.width !== oldData.width ||\n        this.data.keyBgColor !== oldData.keyBgColor) {\n      this.initKeyColorPlane();\n    }\n\n    var inputx = this.data.align !== 'center' ? kbdata.inputOffsetX * w : 0;\n    if (this.data.align === 'right') { inputx *= -1; }\n\n    if (this.data.font !== oldData.font ||\n        this.data.inputColor !== oldData.inputColor ||\n        this.data.width !== oldData.width ||\n        this.data.align !== oldData.align) {\n      this.textInput.setAttribute('text', {\n        font: this.data.font,\n        color: this.data.inputColor,\n        width: w,\n        wrapCount: kbdata.wrapCount,\n        align: this.data.align\n      });\n    }\n\n    // Some hack where the inputRect is stored in the Insert key.\n    for (var i = 0; i < kbdata.layout.length; i++) {\n      var kdata = kbdata.layout[i];\n      if (kdata.key === 'Insert') {\n        this.inputRect = kdata;\n      }\n    }\n\n    this.textInput.object3D.position.set(\n      inputx,\n      (w / 4) - (this.inputRect.y + this.inputRect.h / 2) * w / 2 + kbdata.inputOffsetY * w,\n      0.002\n    );\n\n    if (this.data.width !== oldData.width) {\n      this.cursor.setAttribute('geometry', {\n        primitive: 'plane', width: 0.03 * w, height: 0.01 * w});\n    }\n\n    this.updateCursorPosition();\n    this.setupHand();\n\n    this.keyBgColor.set(this.data.keyBgColor);\n    this.keyHoverColor.set(this.data.keyHoverColor);\n    this.keyPressColor.set(this.data.keyPressColor);\n\n    if (this.data.show) {\n      this.open();\n    } else {\n      this.close();\n    }\n  },\n\n  tick: function (time) {\n    var intersection;\n\n    if (this.prevCheckTime && (time - this.prevCheckTime < this.data.interval)) { return; }\n    if (!this.prevCheckTime) {\n      this.prevCheckTime = time;\n      return;\n    }\n    if (!this.raycaster) { return; }\n    if (!this.focused) { return; }\n\n    intersection = this.raycaster.getIntersection(this.kbImg);\n    if (!intersection) { return; }\n\n    var uv = intersection.uv;\n    var keys = KEYBOARDS[this.data.model].layout;\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i];\n      if (uv.x > k.x && uv.x < k.x + k.w && (1.0 - uv.y) > k.y && (1.0 - uv.y) < k.y + k.h) {\n        if (this.keyHover !== k) {\n          // Update key hover.\n          this.keyHover = k;\n          this.updateKeyColorPlane(this.keyHover.key, this.keyHoverColor);\n        }\n        break;\n      }\n    }\n  },\n\n  play: function () {\n    if (!this.cursorUpdated) { return; }\n    this.startBlinking();\n  },\n\n  pause: function () {\n    this.stopBlinking();\n  },\n\n  /**\n   * The plane for visual feedback when a key is hovered or clicked\n   */\n  initKeyColorPlane: function () {\n    var keyColorPlane = this.keyColorPlane = document.createElement('a-entity');\n    keyColorPlane.classList.add('superKeyboardKeyColorPlane');\n    keyColorPlane.object3D.position.z = 0.001;\n    keyColorPlane.object3D.visible = false;\n    keyColorPlane.setAttribute('geometry', {primitive: 'plane'});\n    keyColorPlane.setAttribute('material', {shader: 'flat', color: this.data.keyBgColor,\n                                            transparent: true});\n    keyColorPlane.addEventListener('componentinitialized', function (evt) {\n      if (evt.detail.name !== 'material') { return; }\n      this.getObject3D('mesh').material.blending = THREE.AdditiveBlending;\n    });\n    this.el.appendChild(keyColorPlane);\n  },\n\n  /**\n   * Move key color plane to appropriate position, scale, and change color.\n   */\n  updateKeyColorPlane: function (key, color) {\n    var kbdata = KEYBOARDS[this.data.model];\n    var keyColorPlane = this.keyColorPlane;\n\n    // Unset.\n    if (!key) {\n      keyColorPlane.object3D.visible = false;\n      return;\n    }\n\n    for (var i = 0; i < kbdata.layout.length; i++) {\n      var kdata = kbdata.layout[i];\n      if (kdata.key !== key) { continue; }\n      var w = this.data.width;\n      var h = this.data.width / 2;\n      var w2 = w / 2;\n      var h2 = h / 2;\n      var keyw = kdata.w * w;\n      var keyh = kdata.h * h;\n      // Size.\n      keyColorPlane.object3D.scale.x = keyw;\n      keyColorPlane.object3D.scale.y = keyh;\n      // Position.\n      keyColorPlane.object3D.position.x = kdata.x * w - w2 + keyw / 2;\n      keyColorPlane.object3D.position.y = (1 - kdata.y) * h - h2 - keyh / 2;\n      // Color.\n      keyColorPlane.getObject3D('mesh').material.color.copy(color);\n      break;\n    }\n    keyColorPlane.object3D.visible = true;\n  },\n\n  setupHand: function () {\n    if (this.hand && this.hand.ownRaycaster) {\n      this.hand.removeAttribute('raycaster');\n    }\n    if (this.data.hand) {\n      this.hand = this.data.hand;\n    } else {\n      this.hand = document.querySelector([\n        '[cursor]',\n        '[vive-controls]',\n        '[tracked-controls]',\n        '[oculus-touch-controls]',\n        '[windows-motion-controls]',\n        '[hand-controls]',\n        '[daydream-controls] [cursor] > [raycaster]'\n      ].join(','));\n    }\n\n    if (!this.hand) {\n      console.error('super-keyboard: no controller found. Add <a-entity> with controller or specify with super-keyboard=\"hand: #selectorToController\".');\n    } else {\n      if (!this.hand.hasLoaded) {\n        this.hand.addEventListener('loaded', this.setupHand.bind(this));\n        return;\n      }\n      var raycaster = this.hand.components['raycaster'];\n      var params = {};\n\n      if (!raycaster) {\n        this.hand.ownRaycaster = true;\n        params.showLine = this.data.show;\n        params.enabled = this.data.show;\n        if (this.data.injectToRaycasterObjects) {\n          params.objects = '.keyboardRaycastable';\n        }\n        this.hand.setAttribute('raycaster', params);\n      } else {\n        this.hand.ownRaycaster = false;\n        if (this.data.injectToRaycasterObjects) {\n          var objs = raycaster.data.objects.split(',');\n          if (objs.indexOf('.keyboardRaycastable') === -1) {\n            objs.push('.keyboardRaycastable');\n          }\n          params.objects = objs.join(',').replace(/^,/, '');\n          this.hand.setAttribute('raycaster', params);\n        }\n      }\n\n      this.raycaster = this.hand.components.raycaster;\n    }\n  },\n\n  filter: function (str) {\n    if (str === '') { return ''; }\n    for (var i = 0; i < this.data.filters.length; i++) {\n      switch (this.data.filters[i]) {\n        case 'custom': {\n          if (this.userFilterFunc) str = this.userFilterFunc(str);\n          break;\n        }\n        case 'allupper': {\n          str = str.toUpperCase();\n          break;\n        }\n        case 'alllower': {\n          str = str.toLowerCase();\n          break;\n        }\n        case 'title': {\n          str = str.split(' ').map(function (s) { return s[0].toUpperCase() + s.substr(1); }).join(' ');\n          break;\n        }\n        case 'numbers': {\n          str = str.split('').filter(function (c) { return !isNaN(parseInt(c)) || c === '.'; }).join('');\n          break;\n        }\n        case 'first': {\n          str = str[0].toUpperCase() + str.substr(1);\n          break;\n        }\n        case 'trim': {\n          str = str.trim();\n          break;\n        }\n      }\n    }\n    return this.data.maxLength > 0 ? str.substr(0, this.data.maxLength) : str;\n  },\n\n  click: function (ev) {\n    if (!this.keyHover) { return; }\n\n    switch (this.keyHover.key) {\n      case 'Enter': {\n        this.accept();\n        break;\n      }\n      case 'Insert': {\n        return;\n      }\n      case 'Delete': {\n        this.rawValue = this.rawValue.substr(0, this.rawValue.length - 1);\n        var newValue = this.filter(this.rawValue);\n        this.el.setAttribute('super-keyboard', 'value', newValue);\n        this.updateTextInput(newValue);\n        this.changeEventDetail.value = newValue;\n        this.el.emit('superkeyboardchange', this.changeEventDetail);\n        break;\n      }\n      case 'Shift': {\n        this.shift = !this.shift;\n        this.keyHover.el.setAttribute('material', 'color',\n          this.shift ? this.data.keyHoverColor : this.data.keyBgColor\n        );\n        break;\n      }\n      case 'Escape': {\n        this.dismiss();\n        break;\n      }\n      default: {\n        if (this.data.maxLength > 0 && this.rawValue.length > this.data.maxLength) { break; }\n        this.rawValue += this.shift ? this.keyHover.key.toUpperCase() : this.keyHover.key;\n        var newValue = this.filter(this.rawValue);\n        this.el.setAttribute('super-keyboard', 'value', newValue);\n        this.updateTextInput(newValue);\n        this.changeEventDetail.value = newValue;\n        this.el.emit('superkeyboardchange', this.changeEventDetail);\n        break;\n      }\n    }\n\n    this.updateKeyColorPlane(this.keyHover.key, this.keyPressColor);\n    var self = this;\n    setTimeout(function () {\n      self.updateKeyColorPlane(self.keyHover.key, self.keyHoverColor);\n    }, 100);\n    this.updateCursorPosition();\n  },\n\n  open: function () {\n    this.el.object3D.visible = true;\n    if (this.hand && this.hand.ownRaycaster) {\n      this.hand.setAttribute('raycaster', {showLine: true, enabled: true});\n    }\n  },\n\n  close: function () {\n    this.el.object3D.visible = false;\n    if (this.hand && this.hand.ownRaycaster) {\n      this.hand.setAttribute('raycaster', {showLine: false, enabled: false});\n    }\n  },\n\n  accept: function () {\n    this.el.object3D.visible = false;\n    if (this.hand && this.hand.ownRaycaster) {\n      this.hand.setAttribute('raycaster', {showLine: false, enabled: false});\n    }\n    this.el.emit('superkeyboardinput', {value: this.data.value});\n    this.data.show = false;\n  },\n\n  dismiss: function () {\n    this.data.value = this.defaultValue;\n    this.updateTextInput();\n    this.el.object3D.visible = false;\n    if (this.hand && this.hand.ownRaycaster) {\n      this.hand.setAttribute('raycaster', {showLine: false, enabled: false});\n    }\n    this.el.emit('superkeyboarddismiss');\n    this.data.show = false;\n  },\n\n  blur: function (ev) {\n    this.focused = false;\n    if (this.keyHover && this.keyHover.key !== 'Shift') {\n      this.updateKeyColorPlane(this.keyHover.key, this.keyBgColor);\n    }\n    this.keyHover = null;\n  },\n\n  hover: function (ev) {\n    this.focused = true;\n  },\n\n  startBlinking: function () {\n    this.stopBlinking();\n    this.intervalId = window.setInterval(this.blink.bind(this), this.data.blinkingSpeed);\n  },\n\n  stopBlinking: function () {\n    window.clearInterval(this.intervalId);\n    this.intervalId = 0;\n  },\n\n  blink: function () {\n    this.cursor.object3D.visible = !this.cursor.object3D.visible;\n  },\n\n  setCustomFilter: function (f) {\n    this.userFilterFunc = f;\n  },\n\n  addCustomModel: function (name, model) {\n    if (!name) { return; }\n    KEYBOARDS[name] = model;\n  },\n\n  updateCursorPosition: function () {\n    var font = this.textInput.components.text.currentFont;\n    if (!font) {\n      var self = this;\n      this.cursor.object3D.visible = false;\n      window.setTimeout(function () {\n        self.updateCursorPosition();\n        self.startBlinking();\n      }, 700);\n      return;\n    }\n\n    var w = this.data.width;\n    var kbdata = KEYBOARDS[this.data.model];\n    var posy = -this.inputRect.h / 2 * w / 2.4 + kbdata.inputOffsetY * w;\n    var ratio = this.data.width / this.textInput.components.text.data.wrapCount;\n    var pos = 0;\n    var fontFactor = FontFactors[this.textInput.components.text.data.font];\n    if (fontFactor === undefined) { fontFactor = 20; }\n    for (var i = 0; i < this.data.value.length; i++) {\n      var char = findFontChar(font.chars, this.data.value.charCodeAt(i));\n      pos += char.width + char.xadvance * (char.id === 32 ? 2 : 1);\n    }\n    if (this.data.align === 'center') {\n      pos = pos * ratio * fontFactor * 0.0011 / 2.0 + 0.02 * w;\n    } else if (this.data.align === 'left') {\n      pos = pos * ratio * fontFactor * 0.0011 + 0.02 * w;\n      pos -= w / 2;\n    } else if (this.data.align === 'right') {\n      pos = -pos * ratio * fontFactor * 0.0011 - 0.02 * w;\n      pos += w / 2;\n    }\n    this.cursor.object3D.position.set(pos, posy, 0.001);\n    this.cursorUpdated = true;\n  },\n\n  updateTextInput: function (value) {\n    this.textInputObject.value = value || this.data.value;\n    this.textInput.setAttribute('text', this.textInputObject);\n  }\n});\n\nfunction findFontChar (chars, code) {\n  for (var i = 0; i < chars.length; i++) {\n    if (chars[i].id === code) { return chars[i]; }\n  }\n  return null;\n}\n","module.exports = {\n  'basic': {wrapCount: 30, inputOffsetY: 0.008, inputOffsetX: 0.08, img: 'sk-basic.png', layout: [{'key': '1', 'x': 0.044, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': '2', 'x': 0.124, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': '3', 'x': 0.203, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': '4', 'x': 0.282, 'y': 0.226, 'w': 0.08, 'h': 0.152}, {'key': '5', 'x': 0.363, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': '6', 'x': 0.442, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': '7', 'x': 0.521, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': '8', 'x': 0.601, 'y': 0.226, 'w': 0.08, 'h': 0.152}, {'key': '9', 'x': 0.681, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': '0', 'x': 0.761, 'y': 0.226, 'w': 0.079, 'h': 0.152}, {'key': 'Delete', 'x': 0.846, 'y': 0.227, 'w': 0.108, 'h': 0.146}, {'key': 'Enter', 'x': 0.847, 'y': 0.526, 'w': 0.108, 'h': 0.244}, {'key': 'q', 'x': 0.044, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'w', 'x': 0.124, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'e', 'x': 0.203, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'r', 'x': 0.282, 'y': 0.377, 'w': 0.08, 'h': 0.152}, {'key': 't', 'x': 0.363, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'y', 'x': 0.442, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'u', 'x': 0.521, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'i', 'x': 0.601, 'y': 0.377, 'w': 0.08, 'h': 0.152}, {'key': 'o', 'x': 0.681, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'p', 'x': 0.761, 'y': 0.377, 'w': 0.079, 'h': 0.152}, {'key': 'l', 'x': 0.729, 'y': 0.53, 'w': 0.08, 'h': 0.154}, {'key': 'a', 'x': 0.092, 'y': 0.53, 'w': 0.08, 'h': 0.154}, {'key': 's', 'x': 0.171, 'y': 0.53, 'w': 0.08, 'h': 0.154}, {'key': 'd', 'x': 0.251, 'y': 0.53, 'w': 0.08, 'h': 0.154}, {'key': 'f', 'x': 0.331, 'y': 0.53, 'w': 0.079, 'h': 0.154}, {'key': 'g', 'x': 0.41, 'y': 0.53, 'w': 0.08, 'h': 0.154}, {'key': 'h', 'x': 0.49, 'y': 0.53, 'w': 0.079, 'h': 0.154}, {'key': 'j', 'x': 0.57, 'y': 0.53, 'w': 0.079, 'h': 0.154}, {'key': 'k', 'x': 0.649, 'y': 0.53, 'w': 0.08, 'h': 0.154}, {'key': 'z', 'x': 0.172, 'y': 0.684, 'w': 0.079, 'h': 0.154}, {'key': 'x', 'x': 0.251, 'y': 0.684, 'w': 0.08, 'h': 0.154}, {'key': 'c', 'x': 0.331, 'y': 0.684, 'w': 0.079, 'h': 0.154}, {'key': 'v', 'x': 0.41, 'y': 0.684, 'w': 0.08, 'h': 0.154}, {'key': 'b', 'x': 0.49, 'y': 0.684, 'w': 0.08, 'h': 0.154}, {'key': 'n', 'x': 0.57, 'y': 0.684, 'w': 0.079, 'h': 0.154}, {'key': 'm', 'x': 0.649, 'y': 0.684, 'w': 0.08, 'h': 0.154}, {'key': ' ', 'x': 0.27, 'y': 0.838, 'w': 0.415, 'h': 0.126}, {'key': 'Shift', 'x': 0.042, 'y': 0.827, 'w': 0.068, 'h': 0.142}, {'key': 'Escape', 'x': 0.876, 'y': 0.823, 'w': 0.078, 'h': 0.134}, {'key': 'Insert', 'x': 0.058, 'y': 0, 'w': 0.881, 'h': 0.149}]},\n  'numpad': {wrapCount: 20, inputOffsetY: 0.005, inputOffsetX: 0.32, img: 'sk-numpad.png', layout: [{'key': '7', 'x': 0.313, 'y': 0.254, 'w': 0.088, 'h': 0.177}, {'key': '8', 'x': 0.401, 'y': 0.254, 'w': 0.088, 'h': 0.177}, {'key': '9', 'x': 0.49, 'y': 0.254, 'w': 0.088, 'h': 0.177}, {'key': '4', 'x': 0.313, 'y': 0.431, 'w': 0.088, 'h': 0.177}, {'key': '5', 'x': 0.401, 'y': 0.431, 'w': 0.088, 'h': 0.177}, {'key': '6', 'x': 0.49, 'y': 0.431, 'w': 0.088, 'h': 0.177}, {'key': '2', 'x': 0.401, 'y': 0.608, 'w': 0.088, 'h': 0.177}, {'key': '1', 'x': 0.313, 'y': 0.608, 'w': 0.088, 'h': 0.177}, {'key': '3', 'x': 0.49, 'y': 0.608, 'w': 0.088, 'h': 0.177}, {'key': '0', 'x': 0.313, 'y': 0.785, 'w': 0.177, 'h': 0.161}, {'key': '.', 'x': 0.49, 'y': 0.785, 'w': 0.088, 'h': 0.161}, {'key': 'Escape', 'x': 0.578, 'y': 0.785, 'w': 0.105, 'h': 0.161}, {'key': 'Enter', 'x': 0.578, 'y': 0.431, 'w': 0.105, 'h': 0.354}, {'key': 'Delete', 'x': 0.578, 'y': 0.254, 'w': 0.105, 'h': 0.177}, {'key': 'Insert', 'x': 0.294, 'y': 0.001, 'w': 0.409, 'h': 0.19}]}\n};\n","/**\n * TextGeometry component for A-Frame.\n */\nvar debug = AFRAME.utils.debug;\n\nvar error = debug('aframe-text-component:error');\n\nvar fontLoader = new THREE.FontLoader();\n\nAFRAME.registerComponent('text-geometry', {\n  schema: {\n    bevelEnabled: {default: false},\n    bevelSize: {default: 8, min: 0},\n    bevelThickness: {default: 12, min: 0},\n    curveSegments: {default: 12, min: 0},\n    font: {type: 'asset', default: 'https://rawgit.com/ngokevin/kframe/master/components/text-geometry/lib/helvetiker_regular.typeface.json'},\n    height: {default: 0.05, min: 0},\n    size: {default: 0.5, min: 0},\n    style: {default: 'normal', oneOf: ['normal', 'italics']},\n    weight: {default: 'normal', oneOf: ['normal', 'bold']},\n    value: {default: ''}\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n\n    var mesh = el.getOrCreateObject3D('mesh', THREE.Mesh);\n    if (data.font.constructor === String) {\n      // Load typeface.json font.\n      fontLoader.load(data.font, function (response) {\n        var textData = AFRAME.utils.clone(data);\n        textData.font = response;\n        mesh.geometry = new THREE.TextGeometry(data.value, textData);\n      });\n    } else if (data.font.constructor === Object) {\n      // Set font if already have a typeface.json through setAttribute.\n      mesh.geometry = new THREE.TextGeometry(data.value, data);\n    } else {\n      error('Must provide `font` (typeface.json) or `fontPath` (string) to text component.');\n    }\n  }\n});\n"],"sourceRoot":""}