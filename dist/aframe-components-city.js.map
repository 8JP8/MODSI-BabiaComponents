{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js","webpack:///./src/vismapper.js","webpack:///./src/visdata.js","webpack:///./src/querier.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AFRAME","Error","registerComponent","schema","width","type","depth","height","multiple","init","this","data","el","update","oldData","dataToShow","components","geometry","primitive","remove","pause","play","dependencies","from","index","document","addEventListener","e","dataRetrieved","detail","vismapper","gitHubApi","requestGitHubApi","request","XMLHttpRequest","open","onload","status","console","log","id","dataEventLoaded","CustomEvent","JSON","parse","response","dispatchEvent","reject","statusText","xhr","onerror","send"],"mappings":"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","file":"aframe-components-city.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import './vismapper'\nimport './visdata'\nimport './querier'","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('vismapper', {\n    schema: {\n        width: { type: 'string' },\n        depth: { type: 'string' },\n        height: { type: 'string' }\n    },\n\n    /**\n    * Set if component needs multiple instancing.\n    */\n    multiple: false,\n\n    /**\n    * Called once when component is attached. Generally for initial setup.\n    */\n    init: function () {\n        let data = this.data;\n        let el = this.el;\n\n    },\n\n    /**\n    * Called when component is attached and when component data changes.\n    * Generally modifies the entity based on the data.\n    */\n\n    update: function (oldData) {\n        var data = this.data;\n        var el = this.el;\n\n        /**\n         * Update geometry component\n         */\n        if (data.dataToShow) {\n            if (el.components.geometry.data.primitive === \"box\") {\n                el.components.geometry.data.height = (data.dataToShow[data.height] / 100)\n                el.components.geometry.data.width = data.dataToShow[data.width] || 2\n                el.components.geometry.data.depth = data.dataToShow[data.depth] || 2\n            }\n            el.components.geometry.update(el.components.geometry.data)\n        }\n    },\n    /**\n    * Called when a component is removed (e.g., via removeAttribute).\n    * Generally undoes all modifications to the entity.\n    */\n    remove: function () { },\n\n    /**\n    * Called on each scene tick.\n    */\n    // tick: function (t) { },\n\n    /**\n    * Called when entity pauses.\n    * Use to stop or remove any dynamic or background behavior such as events.\n    */\n    pause: function () { },\n\n    /**\n    * Called when entity resumes.\n    * Use to continue or add any dynamic or background behavior such as events.\n    */\n    play: function () { },\n\n})","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('visdata', {\n  dependencies: ['querier', 'vismapper'],\n  schema: {\n    from: { type: 'string' },\n    index: { type: 'number' }\n  },\n\n  /**\n  * Set if component needs multiple instancing.\n  */\n  multiple: false,\n\n  /**\n  * Called once when component is attached. Generally for initial setup.\n  */\n  init: function () {\n    let data = this.data;\n    let el = this.el;\n\n  },\n\n  /**\n  * Called when component is attached and when component data changes.\n  * Generally modifies the entity based on the data.\n  */\n\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n\n    // Listen the event when querier ready\n    document.addEventListener('dataReady' + data.from, function (e) {\n      data.dataRetrieved = e.detail[data.index];\n      el.components.vismapper.data.dataToShow = data.dataRetrieved;\n      el.components.vismapper.update(el.components.vismapper.data)\n    });\n  },\n  /**\n  * Called when a component is removed (e.g., via removeAttribute).\n  * Generally undoes all modifications to the entity.\n  */\n  remove: function () { },\n\n  /**\n  * Called on each scene tick.\n  */\n  // tick: function (t) { },\n\n  /**\n  * Called when entity pauses.\n  * Use to stop or remove any dynamic or background behavior such as events.\n  */\n  pause: function () { },\n\n  /**\n  * Called when entity resumes.\n  * Use to continue or add any dynamic or background behavior such as events.\n  */\n  play: function () { },\n\n})","/* global AFRAME */\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n* A-Charts component for A-Frame.\n*/\nAFRAME.registerComponent('querier', {\n    schema: {\n        gitHubApi: { type: 'string' },\n    },\n\n    /**\n    * Set if component needs multiple instancing.\n    */\n    multiple: false,\n\n    /**\n    * Called once when component is attached. Generally for initial setup.\n    */\n    init: function () {\n        let data = this.data;\n        let el = this.el;\n\n        if (data.gitHubApi) {\n            requestGitHubApi(data, el)\n        }\n\n    },\n\n    /**\n    * Called when component is attached and when component data changes.\n    * Generally modifies the entity based on the data.\n    */\n\n    update: function (oldData) {\n        var data = this.data;\n        var el = this.el;\n\n    },\n    /**\n    * Called when a component is removed (e.g., via removeAttribute).\n    * Generally undoes all modifications to the entity.\n    */\n    remove: function () { },\n\n    /**\n    * Called on each scene tick.\n    */\n    // tick: function (t) { },\n\n    /**\n    * Called when entity pauses.\n    * Use to stop or remove any dynamic or background behavior such as events.\n    */\n    pause: function () { },\n\n    /**\n    * Called when entity resumes.\n    * Use to continue or add any dynamic or background behavior such as events.\n    */\n    play: function () { },\n\n})\n\n\nlet requestGitHubApi = (data, el) => {\n    // Create a new request object\n    let request = new XMLHttpRequest();\n\n    // Initialize a request\n    request.open('get', data.gitHubApi)\n    // Send it\n    request.onload = function () {\n        if (this.status >= 200 && this.status < 300) {\n            console.log(\"data OK in request.response\", el.id)\n            // Create the event\n            var dataEventLoaded = new CustomEvent(\"dataReady\" + el.id, { \"detail\": JSON.parse(request.response) });\n\n            // Dispatch/Trigger/Fire the event\n            document.dispatchEvent(dataEventLoaded);\n\n        } else {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        }\n    };\n    request.onerror = function () {\n        reject({\n            status: this.status,\n            statusText: xhr.statusText\n        });\n    };\n    request.send();\n}"],"sourceRoot":""}